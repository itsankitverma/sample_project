package com.fedex.lacitd.cashcontrol.biztier.facades;

import com.fedex.lacitd.cashcontrol.biztier.common.TotalSummaryVO;
import com.fedex.lacitd.cashcontrol.biztier.exception.FacadeException;
import com.fedex.lacitd.cashcontrol.datatier.valueobject.ReceivablesVO;

import java.rmi.RemoteException;
import java.util.Collection;
import java.util.Hashtable;

/**
 * Created 09-07-2002 03:34:14 PM
 * Code generated by the Forte For Java EJB Builder
 *
 * @author ccardenas
 */

public interface RODFacade extends javax.ejb.EJBObject {
    public void loadInvoices(Collection colRec) throws RemoteException, FacadeException;

    public Collection getAwbToQueryCosmos(String locationCodePk, String employeeCodePk) throws RemoteException, FacadeException;

    public Collection applyScans(Collection colChanges) throws RemoteException, FacadeException;

    public Hashtable getCourierCashRecapTable(String locationCodePk, String employeeCodePk, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException, RemoteException;

    public Collection getAllRecStatus() throws FacadeException, RemoteException;

    public void changeRecPaymentCurrency(int recPk, String newCurrency) throws RemoteException, FacadeException;

    public void changeRecCurrency(int recPk, String newCurrency) throws RemoteException, FacadeException;

    public void applyCheckinAgentChanges(Collection colChanges) throws RemoteException, FacadeException;

    public Collection getInvoicesByAwb(String awbNumber) throws RemoteException, FacadeException;

    public boolean addReceivable(ReceivablesVO recVO) throws RemoteException;

    public ReceivablesVO getReceivables(int recPk) throws RemoteException;

    public int reassignReceivableToCourier(int recPk, java.lang.String locationCodePk, String employeeCodePk) throws RemoteException;

    public Collection getCouriersWithPendents(String location) throws RemoteException, FacadeException;

    public Collection getRODUsedCurrencies(String locationCodePk, String employeeCodePk) throws RemoteException, FacadeException;

    public void runInCageExceptionsTask() throws RemoteException, FacadeException;

    public Collection getAwbToQuerySTAT44() throws RemoteException, FacadeException;

    public void saveSTAT44Scans(Collection col) throws RemoteException, FacadeException;

    public boolean loadInvoices(Collection colRec, String filename) throws RemoteException, FacadeException;

    public Collection getRodFilesImportingStatus(String empId) throws RemoteException, FacadeException;

    public Collection saveScans(Collection scans, String currentCurrency, double exchRate) throws RemoteException, FacadeException;

    public Collection getRodFilesImportingDetails(int logId) throws RemoteException, FacadeException;

    public void splitCurrency(Collection receivables, String tabType, double exchangeRate, double amountToChange) throws FacadeException, RemoteException;

    public Hashtable getSplitCourierCashRecapTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException, RemoteException;

    public Collection applyPaymentToInvoices(String courierId, String locationCd, String countryCd, String paymentCurrency, int paymentType, String otherDocNbr, boolean isCash, boolean isFindByAWB, Collection invoices) throws FacadeException, RemoteException;

    public TotalSummaryVO getRODDetailsTotal(String locationCodePk, String employeeCodePk, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, FacadeException;

    public TotalSummaryVO getRODDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, FacadeException;
}
