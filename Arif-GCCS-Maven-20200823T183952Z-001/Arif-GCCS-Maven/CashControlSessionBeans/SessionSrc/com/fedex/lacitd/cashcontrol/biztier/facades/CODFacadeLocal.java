package com.fedex.lacitd.cashcontrol.biztier.facades;

import com.fedex.lacitd.cashcontrol.biztier.common.TotalSummaryVO;
import com.fedex.lacitd.cashcontrol.biztier.exception.FacadeException;

import java.util.Collection;
import java.util.Hashtable;

/**
 * Created 09-07-2002 03:34:14 PM
 * Code generated by the Forte For Java EJB Builder
 *
 * @author ccardenas
 */

public interface CODFacadeLocal extends javax.ejb.EJBLocalObject {
   // public void loadInvoices(Collection colRec) throws com.fedex.lacitd.cashcontrol.biztier.exception.FacadeException;

    //public boolean loadInvoices(Collection colRec, String filename) throws FacadeException;

    public Collection getAwbToQueryCosmos(String locationCodePk, String employeeCodePk) throws FacadeException;

    public Collection applyCODScans(Collection colChanges) throws com.fedex.lacitd.cashcontrol.biztier.exception.FacadeException;

    public Hashtable getCourierCashRecapTable(String locationCodePk, String employeeCodePk, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException;

    public Collection getAllCOD_RecStatus() throws FacadeException;

    public void changeRecPaymentCurrency(int recPk, String newCurrency) throws FacadeException;

    public void changeRecCurrency(int recPk, String newCurrency) throws FacadeException;

    public void applyCheckinAgentChanges(Collection colChanges) throws FacadeException;

    public Collection getInvoicesByAwb(String awbNumber) throws FacadeException;

    public boolean addCOD_Receivable(com.fedex.lacitd.cashcontrol.datatier.valueobject.COD_ReceivablesVO recVO);

    public com.fedex.lacitd.cashcontrol.datatier.valueobject.COD_ReceivablesVO getCOD_Receivables(int recPk);

    public int reassignReceivableToCourier(int recPk, String locationCodePk, java.lang.String employeeCodePk);

    public Collection getCouriersWithPendents(String location) throws FacadeException;

    public Collection getCODUsedCurrencies(String locationCodePk, String employeeCodePk) throws FacadeException;

    public void runInCageExceptionsTask() throws FacadeException;

    public Collection getAwbToQuerySTAT44() throws FacadeException;

    public void saveSTAT44Scans(Collection col) throws FacadeException;

    public Collection getCodFilesImportingStatus(String empId) throws FacadeException;

    public Collection saveScans(Collection scans, String currentCurrency, double exchRate) throws FacadeException;

    public Collection getCodFilesImportingDetails(int logId) throws FacadeException;

    public void splitCurrency(Collection receivables, String tabType, double exchangeRate, double amountToChange) throws FacadeException;

    public Hashtable getSplitCourierCashRecapTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException;

    public Collection applyPaymentToInvoices(String courierId, String locationCd, String countryCd, String paymentCurrency, int paymentType, String otherDocNbr, boolean isCash, boolean isFindByAWB, Collection invoices) throws FacadeException;

    public TotalSummaryVO getCODDetailsTotal(String locationCodePk, String employeeCodePk, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException;

    public TotalSummaryVO getCODDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws FacadeException;
}
