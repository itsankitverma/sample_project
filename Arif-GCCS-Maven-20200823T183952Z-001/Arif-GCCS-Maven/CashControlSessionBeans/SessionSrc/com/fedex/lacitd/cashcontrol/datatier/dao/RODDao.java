package com.fedex.lacitd.cashcontrol.datatier.dao;

import com.fedex.lacitd.cashcontrol.biztier.common.TotalSummaryVO;
import com.fedex.lacitd.cashcontrol.datatier.exception.DAOException;
import com.fedex.lacitd.cashcontrol.datatier.valueobject.ReceivablesVO;
import com.fedex.lacitd.cashcontrol.datatier.valueobject.RodFileProcLogVO;

import java.rmi.RemoteException;
import java.util.Collection;
import java.util.Hashtable;

/**
 * Created 10-07-2002 03:27:43 PM
 * Code generated by the Forte For Java EJB Builder
 *
 * @author ccardenas
 */

public interface RODDao extends javax.ejb.EJBObject {
    public Collection getAwbToQueryCosmos(java.lang.String locationCodePk, java.lang.String employeeCodePk) throws RemoteException, DAOException;

    public Hashtable getCourierCashRecapTable(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, DAOException;

    public Collection getAllRecStatus() throws RemoteException, DAOException, RemoteException;

    public Collection getInvoicesByAwb(String awbNumber) throws RemoteException, DAOException;

    public Collection getCouriersWithPendents(String locationCodePk) throws RemoteException, DAOException;

    public Collection getAwbToQuerySTAT44() throws RemoteException, DAOException;

    public Collection getRodFilesImportingStatus(String empId) throws RemoteException, DAOException;

    public boolean existsRecDuplicates(ReceivablesVO recVO) throws RemoteException, DAOException;

    public Collection getRODUsedCurrencies(String locationCd, String employeeId) throws RemoteException, DAOException;

    public void runInCageExceptionsTask() throws RemoteException, DAOException;

    public Collection applyRODScans(Collection colChanges) throws RemoteException, DAOException;

    public boolean existsFileProcessed(String fileName) throws RemoteException, DAOException;

    public void insertRODFileProcLog(RodFileProcLogVO rodVO) throws RemoteException, DAOException;

    public Collection getRodFilesImportingDetails(int logId) throws DAOException, RemoteException;

    public Hashtable getSplitCourierCashRecapTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, DAOException;

    public Collection applyPaymentToInvoices(String courierId, String locationCd, String countryCd, String paymentCurrency, int paymentType, String otherDocNbr, boolean isCash, boolean isFindByAWB, Collection invoices) throws DAOException, RemoteException;

    public TotalSummaryVO getRODDetailsTotal(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, DAOException;

    public TotalSummaryVO getRODDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws RemoteException, DAOException;
}

