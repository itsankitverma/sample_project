package com.fedex.lacitd.cashcontrol.datatier.dao;

import com.fedex.lacitd.cashcontrol.biztier.common.TotalSummaryVO;
import com.fedex.lacitd.cashcontrol.biztier.exception.FacadeException;
import com.fedex.lacitd.cashcontrol.datatier.exception.DAOException;

import java.rmi.RemoteException;
import java.util.Collection;
import java.util.Hashtable;

/**
 * Created 18/11/2003 16:00:06
 * Code generated by the Sun ONE Studio EJB Builder
 *
 * @author ccardenas
 */

public interface PrepPoaDaoLocal extends javax.ejb.EJBLocalObject {
    public java.util.Hashtable getPoaSummaryTable(String locationCd, String courierId, java.lang.String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public java.util.Collection getPoaUsedCurrencies(String locationCd, String employeeId) throws DAOException;

    public Collection processVISAFile(Collection colVISA) throws DAOException;

    public java.util.Hashtable getPrepaidDetailsTable(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public java.util.Hashtable getPrepaidDiscrepanciesTable(String locationCd, Integer pageNumber) throws DAOException;

    public java.util.Collection getPrepaidUsedCurrencies(String locationCd, String employeeId) throws DAOException;

    public double getSurchargesTotalByPoaDetail(int poaDetailId) throws DAOException;

    public java.util.Hashtable getPoaOustInvoices(String accountNbr, String invoiceNbr, Integer pageNumber) throws DAOException;

    public java.util.Collection getLocationsRIHFeed() throws DAOException;

    public Hashtable getSplitPrepaidTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Collection getAllPreStatus() throws DAOException;

    public TotalSummaryVO getPrepaidDetailsTotal(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public TotalSummaryVO getPrepaidDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Hashtable getGroundDetailsTable(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Hashtable getSplitGroundTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Collection getGroundUsedCurrencies(String locationCd, String courier) throws DAOException;

    public TotalSummaryVO getGroundDetailsTotal(String locationCd, String employeeId, String currentCurrencyCd, Integer pageNumber, Integer rowsByPage) throws DAOException;

    public TotalSummaryVO getGroundDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage) throws DAOException;

    public TotalSummaryVO getPoaDetailsTotal(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage) throws DAOException;

    public Hashtable getOacDetailsTable(String locationCd, String employeeId, String currencyCode, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Collection getAwbsToOacs(String locationCd, String employeeId, String currencyCode) throws DAOException;

    public Hashtable getSplitOacTable(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public Collection getOacUsedCurrencies(String locationCd, String employeeId) throws DAOException;

    public TotalSummaryVO getOacDetailsTotal(String locationCd, String employeeId, String currentCurrencyCd, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;

    public TotalSummaryVO getOacDetailsSplitTotal(String locationCd, String employeeId, Integer pageNumber, Integer rowsByPage, String sortColumn, String sortDirection) throws DAOException;
    
    public boolean isInvoiceFedexAcctMatch(String accountNbr, String invoiceNbr) throws DAOException;
}

