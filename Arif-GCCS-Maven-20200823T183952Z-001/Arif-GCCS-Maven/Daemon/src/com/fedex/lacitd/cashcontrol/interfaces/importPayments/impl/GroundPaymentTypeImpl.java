//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.02 at 12:04:00 VET 
//


package com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl;

public class GroundPaymentTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.importPayments.GroundPaymentType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.ValidatableObject
{

    protected java.math.BigDecimal _PymtDocAmt;
    protected java.util.Calendar _ShipDt;
    protected java.lang.String _GrndTrakNbr;
    protected java.math.BigDecimal _PymtTotAmt;
    protected boolean has_CourierId;
    protected int _CourierId;
    protected java.util.Calendar _PymtDt;
    protected boolean has_ChkAgentId;
    protected int _ChkAgentId;
    protected java.math.BigDecimal _PymtCashAmt;
    protected java.lang.String _PymtCurrCd;
    protected boolean has_Num;
    protected boolean _Num;
    protected boolean has_PymtDocType;
    protected int _PymtDocType;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.GroundPaymentType.class);
    }

    public java.math.BigDecimal getPymtDocAmt() {
        return _PymtDocAmt;
    }

    public void setPymtDocAmt(java.math.BigDecimal value) {
        _PymtDocAmt = value;
    }

    public java.util.Calendar getShipDt() {
        return _ShipDt;
    }

    public void setShipDt(java.util.Calendar value) {
        _ShipDt = value;
    }

    public java.lang.String getGrndTrakNbr() {
        return _GrndTrakNbr;
    }

    public void setGrndTrakNbr(java.lang.String value) {
        _GrndTrakNbr = value;
    }

    public java.math.BigDecimal getPymtTotAmt() {
        return _PymtTotAmt;
    }

    public void setPymtTotAmt(java.math.BigDecimal value) {
        _PymtTotAmt = value;
    }

    public int getCourierId() {
        return _CourierId;
    }

    public void setCourierId(int value) {
        _CourierId = value;
        has_CourierId = true;
    }

    public java.util.Calendar getPymtDt() {
        return _PymtDt;
    }

    public void setPymtDt(java.util.Calendar value) {
        _PymtDt = value;
    }

    public int getChkAgentId() {
        return _ChkAgentId;
    }

    public void setChkAgentId(int value) {
        _ChkAgentId = value;
        has_ChkAgentId = true;
    }

    public java.math.BigDecimal getPymtCashAmt() {
        return _PymtCashAmt;
    }

    public void setPymtCashAmt(java.math.BigDecimal value) {
        _PymtCashAmt = value;
    }

    public java.lang.String getPymtCurrCd() {
        return _PymtCurrCd;
    }

    public void setPymtCurrCd(java.lang.String value) {
        _PymtCurrCd = value;
    }

    public boolean isNum() {
        return _Num;
    }

    public void setNum(boolean value) {
        _Num = value;
        has_Num = true;
    }

    public int getPymtDocType() {
        return _PymtDocType;
    }

    public void setPymtDocType(int value) {
        _PymtDocType = value;
        has_PymtDocType = true;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.GroundPaymentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_GrndTrakNbr!= null) {
            context.startElement("", "grnd_trak_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _GrndTrakNbr), "GrndTrakNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ShipDt!= null) {
            context.startElement("", "ship_dt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _ShipDt)), "ShipDt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_CourierId) {
            context.startElement("", "courier_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _CourierId)), "CourierId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ChkAgentId) {
            context.startElement("", "chk_agent_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ChkAgentId)), "ChkAgentId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDt!= null) {
            context.startElement("", "pymt_dt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _PymtDt)), "PymtDt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtTotAmt!= null) {
            context.startElement("", "pymt_tot_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtTotAmt)), "PymtTotAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCashAmt!= null) {
            context.startElement("", "pymt_cash_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtCashAmt)), "PymtCashAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocAmt!= null) {
            context.startElement("", "pymt_doc_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtDocAmt)), "PymtDocAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PymtDocType) {
            context.startElement("", "pymt_doc_type");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PymtDocType)), "PymtDocType");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCurrCd!= null) {
            context.startElement("", "pymt_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtCurrCd), "PymtCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.GroundPaymentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp/z\u00f4\u0012ppsq\u0000~\u0000\u0000-\u00827\u00aeppsq\u0000~\u0000\u0000("
+"\u00a4\u00c5\u0087ppsq\u0000~\u0000\u0000$\u00c2\u0087sppsq\u0000~\u0000\u0000  \u00db\'ppsq\u0000~\u0000\u0000\u001a_\u00e3\u00c3ppsq\u0000~\u0000\u0000\u00164\u00cbhppsq\u0000~\u0000\u0000\u0011"
+"\u00c5\u00c6\u00c9ppsq\u0000~\u0000\u0000\rqH*ppsq\u0000~\u0000\u0000\b-X(ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0004J\u0096[ppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0004J\u0096Psr\u0000\u0011java.la"
+"ng.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0004J\u0096Eppsr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0003\u0001>\n\u00cappsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sq\u0000~\u0000\u000f\u0003\f\u008bvppsr\u0000 com.sun"
+".msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq"
+"\u0000~\u0000\u0012xq\u0000~\u0000\u0003\u0003\f\u008bkq\u0000~\u0000\u0016psq\u0000~\u0000\u0018\u0001\u00e9\u0003\u00e5ppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)s"
+"q\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001"
+"/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsilo"
+"nExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0015\u0001psq\u0000~\u00006t\u0000\rgrnd_trak_n"
+"brt\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u000f\u0003\u00e2\u00c1\u00c8ppsq\u0000~\u0000\u0011\u0003\u00e2\u00c1\u00bdq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0003\u00e2\u00c1\u00b2ppsq\u0000~\u0000\u0018\u0001M\u00d7"
+"hppsr\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.s"
+"un.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000"
+"\u0004dateq\u0000~\u00004q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Hq\u0000~\u0000#sq\u0000~\u0000\u000f\u0002\u0094\u00eaEppsq\u0000~\u0000-\u0002\u0094\u00ea:q\u0000~\u0000\u0016pq"
+"\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0007ship_dtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0005C\u00ef"
+"\u00fdppsq\u0000~\u0000\u0011\u0005C\u00ef\u00f2q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0005C\u00ef\u00e7ppsq\u0000~\u0000\u0018\u0001\u00a6h_ppsr\u0000 com.sun.msv."
+"datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd."
+"IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/da"
+"tatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0003intq\u0000~\u00004sr\u0000*com.sun."
+"msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv"
+".datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lan"
+"g/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConst"
+"raintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWi"
+"thFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbas"
+"eTypeq\u0000~\u0000UL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concre"
+"teType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000\u001fppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datat"
+"ype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Yppq\u0000~\u00004\u0000\u0000sr\u0000!com.s"
+"un.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Tq\u0000~\u0000#t\u0000\u0004longq\u0000~"
+"\u00004sq\u0000~\u0000Xppq\u0000~\u00004\u0000\u0001sq\u0000~\u0000_ppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd"
+".IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Tq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun"
+".msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;"
+"com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT"
+"\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\\ppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Number"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000mt\u0000\u000efractionDig"
+"its\u0000\u0000\u0000\u0000q\u0000~\u0000gt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005v"
+"aluexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000gt\u0000\fmaxIncl"
+"usivesq\u0000~\u0000q\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000bq\u0000~\u0000psr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000"
+"\u0001I\u0000\u0005valuexq\u0000~\u0000r\u0080\u0000\u0000\u0000q\u0000~\u0000bq\u0000~\u0000tsq\u0000~\u0000v\u007f\u00ff\u00ff\u00ffq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Wq\u0000~\u0000#"
+"sq\u0000~\u0000\u000f\u0003\u009d\u0087\u0083ppsq\u0000~\u0000-\u0003\u009d\u0087xq\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006"
+"t\u0000\ncourier_idq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004T~\u009appsq\u0000~\u0000\u0011\u0004T~\u008fq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004T"
+"~\u0084ppq\u0000~\u0000Rsq\u0000~\u0000\u000f\u0002\u00ae\u0016 ppsq\u0000~\u0000-\u0002\u00ae\u0016\u0015q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000"
+"~\u0000<sq\u0000~\u00006t\u0000\fchk_agent_idq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004o\u0004\u009appsq\u0000~\u0000\u0011\u0004o\u0004\u008fq\u0000~\u0000"
+"\u0016p\u0000sq\u0000~\u0000\u0000\u0004o\u0004\u0084ppq\u0000~\u0000Dsq\u0000~\u0000\u000f\u0003!-\u0017ppsq\u0000~\u0000-\u0003!-\fq\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q"
+"\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0007pymt_dtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004+\u0018Vppsq\u0000~\u0000\u0011\u0004+"
+"\u0018Kq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004+\u0018@ppsq\u0000~\u0000\u0018\u0001\u00d8\u00c58ppq\u0000~\u0000mq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000nq\u0000~\u0000#s"
+"q\u0000~\u0000\u000f\u0002RS\u0003ppsq\u0000~\u0000-\u0002RR\u00f8q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t"
+"\u0000\fpymt_tot_amtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0005\u00c0\u00f7_ppsq\u0000~\u0000\u0011\u0005\u00c0\u00f7Tq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0005"
+"\u00c0\u00f7Ippq\u0000~\u0000\u0092sq\u0000~\u0000\u000f\u0003\u00e82\fppsq\u0000~\u0000-\u0003\u00e82\u0001q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q"
+"\u0000~\u0000<sq\u0000~\u00006t\u0000\rpymt_cash_amtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004\u00a1\u00acGppsq\u0000~\u0000\u0011\u0004\u00a1\u00ac<q\u0000"
+"~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u00a1\u00ac1ppq\u0000~\u0000\u0092sq\u0000~\u0000\u000f\u0002\u00c8\u00e6\u00f4ppsq\u0000~\u0000-\u0002\u00c8\u00e6\u00e9q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u0000"
+"6q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fpymt_doc_amtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0003\u00e2>\u000fpps"
+"q\u0000~\u0000\u0011\u0003\u00e2>\u0004q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0003\u00e2=\u00f9ppq\u0000~\u0000Rsq\u0000~\u0000\u000f\u0002;\u00d5\u0095ppsq\u0000~\u0000-\u0002;\u00d5\u008aq\u0000~\u0000\u0016"
+"pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\rpymt_doc_typeq\u0000~\u0000@q\u0000~\u0000<s"
+"q\u0000~\u0000\u000f\u0004\u00ddr\"ppsq\u0000~\u0000\u0011\u0004\u00ddr\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u00ddr\fppq\u0000~\u0000\u001bsq\u0000~\u0000\u000f\u0003\u009fg=ppsq\u0000"
+"~\u0000-\u0003\u009fg2q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fpymt_curr_cd"
+"q\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0001\u00f8\u00bc_ppsq\u0000~\u0000-\u0001\u00f8\u00bcTq\u0000~\u0000\u0016psq\u0000~\u0000\u0018\u0000q}\u00a1ppsr\u0000$com.su"
+"n.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007boole"
+"anq\u0000~\u00004q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000\u00beq\u0000~\u0000#sq\u0000~\u00006t\u0000\u0003numq\u0000~\u0000@q\u0000~\u0000<sr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresho"
+"ldL\u0000\u0006parentq\u0000~\u0000\u00c3[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;"
+"xp\u0000\u0000\u0000)\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000x"
+"p\u0000\u0000\u0000\u00bfq\u0000~\u0000\u00b4ppq\u0000~\u0000zpq\u0000~\u0000\u00acpppppq\u0000~\u0000\tppppq\u0000~\u0000\rq\u0000~\u0000\u000bppq\u0000~\u0000\u008fq\u0000~\u0000\u007fp"
+"pppppppppq\u0000~\u0000\u00b9ppppq\u0000~\u0000\u000eppppq\u0000~\u0000\fq\u0000~\u0000\nppppppq\u0000~\u0000\u0082ppppq\u0000~\u0000\u00a4ppp"
+"q\u0000~\u0000Cpppppppppppppppppppppq\u0000~\u0000Appppppppq\u0000~\u0000Jppq\u0000~\u0000\u00a3pq\u0000~\u0000\u009cpq\u0000"
+"~\u0000\u0006ppppppppppppppq\u0000~\u0000\u0007ppq\u0000~\u0000\u00a1ppppq\u0000~\u0000\u0017ppppppppppq\u0000~\u0000\bpq\u0000~\u0000\u009bq"
+"\u0000~\u0000\u0005ppppq\u0000~\u0000\u0089ppq\u0000~\u0000\u0010q\u0000~\u0000Qpq\u0000~\u0000\u00abpppq\u0000~\u0000\u00b3pq\u0000~\u0000\u0094pppq\u0000~\u0000\u0099pppppq\u0000"
+"~\u0000\u0087q\u0000~\u0000,ppq\u0000~\u0000Opq\u0000~\u0000\u00a9ppq\u0000~\u0000\u008aq\u0000~\u0000\u00b1pppppppppppppppppq\u0000~\u0000\u0091q\u0000~\u0000\u0081"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.GroundPaymentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("ship_dt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  21 :
                        if (("pymt_cash_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  24 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  12 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        if (("grnd_trak_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  27 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  30 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  26 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("ship_dt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("pymt_cash_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  17 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  29 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  32 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("grnd_trak_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  20 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  22 :
                            eatText2(value);
                            state = 23;
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  33 :
                            revertToParentFromText(value);
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  10 :
                            eatText4(value);
                            state = 11;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  31 :
                            eatText5(value);
                            state = 32;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  28 :
                            eatText6(value);
                            state = 29;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  19 :
                            eatText7(value);
                            state = 20;
                            return ;
                        case  25 :
                            eatText8(value);
                            state = 26;
                            return ;
                        case  4 :
                            eatText9(value);
                            state = 5;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  7 :
                            eatText10(value);
                            state = 8;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  16 :
                            eatText11(value);
                            state = 17;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCashAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ChkAgentId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ChkAgentId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CourierId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CourierId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PymtDocType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtTotAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _GrndTrakNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ShipDt = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDt = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
