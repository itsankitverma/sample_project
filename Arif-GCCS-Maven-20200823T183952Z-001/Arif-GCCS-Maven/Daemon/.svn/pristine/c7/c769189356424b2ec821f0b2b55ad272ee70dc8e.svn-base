//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.02 at 12:04:00 VET 
//


package com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl;

public class OtherPaymentTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.importPayments.OtherPaymentType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.ValidatableObject
{

    protected java.lang.String _PymtDocNbr;
    protected java.lang.String _Description;
    protected java.math.BigDecimal _PymtTotAmt;
    protected boolean has_PymtType;
    protected int _PymtType;
    protected java.util.Calendar _PymtDt;
    protected boolean has_ChkAgentId;
    protected int _ChkAgentId;
    protected java.lang.String _PymtCurrCd;
    protected boolean has_Num;
    protected int _Num;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.OtherPaymentType.class);
    }

    public java.lang.String getPymtDocNbr() {
        return _PymtDocNbr;
    }

    public void setPymtDocNbr(java.lang.String value) {
        _PymtDocNbr = value;
    }

    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    public java.math.BigDecimal getPymtTotAmt() {
        return _PymtTotAmt;
    }

    public void setPymtTotAmt(java.math.BigDecimal value) {
        _PymtTotAmt = value;
    }

    public int getPymtType() {
        return _PymtType;
    }

    public void setPymtType(int value) {
        _PymtType = value;
        has_PymtType = true;
    }

    public java.util.Calendar getPymtDt() {
        return _PymtDt;
    }

    public void setPymtDt(java.util.Calendar value) {
        _PymtDt = value;
    }

    public int getChkAgentId() {
        return _ChkAgentId;
    }

    public void setChkAgentId(int value) {
        _ChkAgentId = value;
        has_ChkAgentId = true;
    }

    public java.lang.String getPymtCurrCd() {
        return _PymtCurrCd;
    }

    public void setPymtCurrCd(java.lang.String value) {
        _PymtCurrCd = value;
    }

    public int getNum() {
        return _Num;
    }

    public void setNum(int value) {
        _Num = value;
        has_Num = true;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.OtherPaymentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Description!= null) {
            context.startElement("", "description");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Description), "Description");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ChkAgentId) {
            context.startElement("", "chk_agent_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ChkAgentId)), "ChkAgentId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDt!= null) {
            context.startElement("", "pymt_dt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _PymtDt)), "PymtDt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtTotAmt!= null) {
            context.startElement("", "pymt_tot_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtTotAmt)), "PymtTotAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocNbr!= null) {
            context.startElement("", "pymt_doc_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtDocNbr), "PymtDocNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PymtType) {
            context.startElement("", "pymt_type");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PymtType)), "PymtType");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCurrCd!= null) {
            context.startElement("", "pymt_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtCurrCd), "PymtCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.OtherPaymentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp \u0007\u00df\u00f8ppsq\u0000~\u0000\u0000\u001d9\u007f\u00ebppsq\u0000~\u0000\u0000\u0018"
+"\u00e4\u009b\u00d8ppsq\u0000~\u0000\u0000\u0015(r\u00e2ppsq\u0000~\u0000\u0000\u0011C\u009aTppsq\u0000~\u0000\u0000\u000b\u00b8\u00d5\u00c0ppsq\u0000~\u0000\u0000\u00075\u00d1lppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003z\u0098Jppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0003z\u0098?sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0003z\u00984ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001>\n\u00cappsr\u0000#com.sun.msv.datatype"
+".xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String"
+";L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006s"
+"tringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preser"
+"ve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000"
+" sq\u0000~\u0000\f\u0002<\u008deppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003\u0002<\u008dZq\u0000~\u0000\u0013psq\u0000~\u0000\u0015\u0001\u00e9\u0003\u00e5ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000/q\u0000~\u0000 sr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~"
+"\u0000\u0012\u0001psq\u0000~\u00003t\u0000\u000bdescriptiont\u0000\u0000q\u0000~\u00009sq\u0000~\u0000\f\u0003\u00bb9\u001dppsq\u0000~\u0000\u000e\u0003\u00bb9\u0012q\u0000~\u0000\u0013p"
+"\u0000sq\u0000~\u0000\u0000\u0003\u00bb9\u0007ppsq\u0000~\u0000\u0015\u0001\u00a6h_ppsr\u0000 com.sun.msv.datatype.xsd.IntTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099"
+"\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDataty"
+"peImpl;xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0003intq\u0000~\u00001sr\u0000*com.sun.msv.datatype.xsd.Ma"
+"xInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Range"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.su"
+"n.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000DL\u0000\fconcre"
+"teTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetName"
+"q\u0000~\u0000\u001dxq\u0000~\u0000\u001cppq\u0000~\u00001\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiv"
+"eFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hppq\u0000~\u00001\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd"
+".LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Cq\u0000~\u0000 t\u0000\u0004longq\u0000~\u00001sq\u0000~\u0000Gppq\u0000~\u00001\u0000\u0001sq"
+"\u0000~\u0000Nppq\u0000~\u00001\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000Cq\u0000~\u0000 t\u0000\u0007integerq\u0000~\u00001sr\u0000,com.sun.msv.datatype.xsd.F"
+"ractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatyp"
+"e.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Kppq"
+"\u0000~\u00001\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u00001q\u0000~\u0000\\t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Vt\u0000\fminI"
+"nclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.N"
+"umber\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Vt\u0000\fmaxInclusivesq\u0000~\u0000`\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff"
+"q\u0000~\u0000Qq\u0000~\u0000_sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000a\u0080\u0000\u0000\u0000"
+"q\u0000~\u0000Qq\u0000~\u0000csq\u0000~\u0000e\u007f\u00ff\u00ff\u00ffq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Fq\u0000~\u0000 sq\u0000~\u0000\f\u0002\u0014\u00d0\u00a3ppsq\u0000~\u0000*\u0002"
+"\u0014\u00d0\u0098q\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\fchk_agent_idq\u0000~\u0000"
+"=q\u0000~\u00009sq\u0000~\u0000\f\u0004\u0083\u0004Oppsq\u0000~\u0000\u000e\u0004\u0083\u0004Dq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0004\u0083\u00049ppsq\u0000~\u0000\u0015\u0001M\u00d7hpps"
+"r\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.m"
+"sv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0004dat"
+"eq\u0000~\u00001q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000uq\u0000~\u0000 sq\u0000~\u0000\f\u00035,\u00ccppsq\u0000~\u0000*\u00035,\u00c1q\u0000~\u0000\u0013pq\u0000~\u0000,"
+"sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007pymt_dtq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0005\u008a\u00c4\u008fpps"
+"q\u0000~\u0000\u000e\u0005\u008a\u00c4\u0084q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0005\u008a\u00c4yppsq\u0000~\u0000\u0015\u0001\u00d8\u00c58ppq\u0000~\u0000\\q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000"
+"]q\u0000~\u0000 sq\u0000~\u0000\f\u0003\u00b1\u00ff<ppsq\u0000~\u0000*\u0003\u00b1\u00ff1q\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009"
+"sq\u0000~\u00003t\u0000\fpymt_tot_amtq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0003\u00e4\u00d8\u0089ppsq\u0000~\u0000\u000e\u0003\u00e4\u00d8~q\u0000~\u0000\u0013p\u0000"
+"sq\u0000~\u0000\u0000\u0003\u00e4\u00d8sppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0002\u00a6\u00cd\u00a4ppsq\u0000~\u0000*\u0002\u00a6\u00cd\u0099q\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u0000"
+"6q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\fpymt_doc_nbrq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0003\u00bc(\u00f1ppsq\u0000~\u0000\u000e"
+"\u0003\u00bc(\u00e6q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0003\u00bc(\u00dbppq\u0000~\u0000Asq\u0000~\u0000\f\u0002\u0015\u00c0wppsq\u0000~\u0000*\u0002\u0015\u00c0lq\u0000~\u0000\u0013pq\u0000~\u0000"
+",sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\tpymt_typeq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0004T\u00e4\u000e"
+"ppsq\u0000~\u0000\u000e\u0004T\u00e4\u0003q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0004T\u00e3\u00f8ppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0003\u0016\u00d9)ppsq\u0000~\u0000*\u0003\u0016\u00d9\u001eq\u0000"
+"~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\fpymt_curr_cdq\u0000~\u0000=q\u0000~\u0000"
+"9sq\u0000~\u0000\f\u0002\u00ce`\bppsq\u0000~\u0000*\u0002\u00ce_\u00fdq\u0000~\u0000\u0013pq\u0000~\u0000Asq\u0000~\u00003t\u0000\u0003numq\u0000~\u0000=q\u0000~\u00009sr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tt"
+"hresholdL\u0000\u0006parentq\u0000~\u0000\u00a3[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expre"
+"ssion;xp\u0000\u0000\u0000\u001d\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad"
+"\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppq\u0000~\u0000\u0088pppppppq\u0000~\u0000~q\u0000~\u0000\u0096pppppppppq\u0000~\u0000\u0091ppq\u0000"
+"~\u0000\u0086q\u0000~\u0000\bq\u0000~\u0000\u0014q\u0000~\u0000\u009epq\u0000~\u0000\u0007q\u0000~\u0000\u0099pq\u0000~\u0000|pppppppppppq\u0000~\u0000\u0089pppq\u0000~\u0000\rp"
+"pq\u0000~\u0000\u0006ppppppppppppppppq\u0000~\u0000)pppppppq\u0000~\u0000@ppppppppppppq\u0000~\u0000\u0005pppp"
+"ppppq\u0000~\u0000>ppppppppppppppppppppppppppppq\u0000~\u0000ipppppppq\u0000~\u0000pq\u0000~\u0000\np"
+"pppppppppppppppppppq\u0000~\u0000nq\u0000~\u0000\u000bppq\u0000~\u0000\u0090pq\u0000~\u0000\u0081ppq\u0000~\u0000wppppppppppp"
+"pq\u0000~\u0000\u0098q\u0000~\u0000\tppq\u0000~\u0000\u008e"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.OtherPaymentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  21 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        if (("pymt_type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  14 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  5 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  11 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("pymt_type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  22 :
                            eatText4(value);
                            state = 23;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  19 :
                            eatText5(value);
                            state = 20;
                            return ;
                        case  4 :
                            eatText6(value);
                            state = 5;
                            return ;
                        case  10 :
                            eatText7(value);
                            state = 11;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  16 :
                            eatText8(value);
                            state = 17;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ChkAgentId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ChkAgentId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtTotAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PymtType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDt = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
