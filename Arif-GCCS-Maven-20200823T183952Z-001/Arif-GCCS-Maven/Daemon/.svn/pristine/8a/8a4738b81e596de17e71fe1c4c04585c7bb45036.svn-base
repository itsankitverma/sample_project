//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.02 at 12:04:00 VET 
//


package com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl;

public class PoaPaymentTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.importPayments.PoaPaymentType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.ValidatableObject
{

    protected java.lang.String _PymtDocNbr;
    protected com.fedex.lacitd.cashcontrol.interfaces.importPayments.AppliedToType _AppliedTo;
    protected java.math.BigDecimal _PymtTotAmt;
    protected boolean has_CourierId;
    protected int _CourierId;
    protected boolean has_PymtType;
    protected int _PymtType;
    protected boolean has_ChkAgentId;
    protected int _ChkAgentId;
    protected java.lang.String _PymtCurrCd;
    protected boolean has_Num;
    protected int _Num;
    protected java.lang.String _CustName;
    protected java.lang.String _FedexAccNbr;
    protected java.math.BigDecimal _ExchRate;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.PoaPaymentType.class);
    }

    public java.lang.String getPymtDocNbr() {
        return _PymtDocNbr;
    }

    public void setPymtDocNbr(java.lang.String value) {
        _PymtDocNbr = value;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.AppliedToType getAppliedTo() {
        return _AppliedTo;
    }

    public void setAppliedTo(com.fedex.lacitd.cashcontrol.interfaces.importPayments.AppliedToType value) {
        _AppliedTo = value;
    }

    public java.math.BigDecimal getPymtTotAmt() {
        return _PymtTotAmt;
    }

    public void setPymtTotAmt(java.math.BigDecimal value) {
        _PymtTotAmt = value;
    }

    public int getCourierId() {
        return _CourierId;
    }

    public void setCourierId(int value) {
        _CourierId = value;
        has_CourierId = true;
    }

    public int getPymtType() {
        return _PymtType;
    }

    public void setPymtType(int value) {
        _PymtType = value;
        has_PymtType = true;
    }

    public int getChkAgentId() {
        return _ChkAgentId;
    }

    public void setChkAgentId(int value) {
        _ChkAgentId = value;
        has_ChkAgentId = true;
    }

    public java.lang.String getPymtCurrCd() {
        return _PymtCurrCd;
    }

    public void setPymtCurrCd(java.lang.String value) {
        _PymtCurrCd = value;
    }

    public int getNum() {
        return _Num;
    }

    public void setNum(int value) {
        _Num = value;
        has_Num = true;
    }

    public java.lang.String getCustName() {
        return _CustName;
    }

    public void setCustName(java.lang.String value) {
        _CustName = value;
    }

    public java.lang.String getFedexAccNbr() {
        return _FedexAccNbr;
    }

    public void setFedexAccNbr(java.lang.String value) {
        _FedexAccNbr = value;
    }

    public java.math.BigDecimal getExchRate() {
        return _ExchRate;
    }

    public void setExchRate(java.math.BigDecimal value) {
        _ExchRate = value;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.PoaPaymentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_FedexAccNbr!= null) {
            context.startElement("", "fedex_acc_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FedexAccNbr), "FedexAccNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CustName!= null) {
            context.startElement("", "cust_name");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CustName), "CustName");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_CourierId) {
            context.startElement("", "courier_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _CourierId)), "CourierId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ChkAgentId) {
            context.startElement("", "chk_agent_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ChkAgentId)), "ChkAgentId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtTotAmt!= null) {
            context.startElement("", "pymt_tot_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtTotAmt)), "PymtTotAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocNbr!= null) {
            context.startElement("", "pymt_doc_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtDocNbr), "PymtDocNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PymtType) {
            context.startElement("", "pymt_type");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PymtType)), "PymtType");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCurrCd!= null) {
            context.startElement("", "pymt_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtCurrCd), "PymtCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ExchRate!= null) {
            context.startElement("", "exch_rate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ExchRate)), "ExchRate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AppliedTo!= null) {
            if (_AppliedTo instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
            } else {
                context.startElement("", "applied_to");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_AppliedTo!= null) {
            if (_AppliedTo instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
            }
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_AppliedTo!= null) {
            if (_AppliedTo instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AppliedTo), "AppliedTo");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.PoaPaymentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp0\n\u00bc\u00cbppsq\u0000~\u0000\u0000,\u0086\u0006\u0083ppsq\u0000~\u0000\u0000%"
+"\u00b3X\u00f6ppsq\u0000~\u0000\u0000 \u009a\u00dc\'ppsq\u0000~\u0000\u0000\u001c\u00b1\u008b\u00b9ppsq\u0000~\u0000\u0000\u0018\u00ae\u0080\nppsq\u0000~\u0000\u0000\u0014\u0019\u00ed\u00d0ppsq\u0000~\u0000\u0000\u0010"
+"\n\u00e2\u00a5ppsq\u0000~\u0000\u0000\u000b\u0014\u00b6]ppsq\u0000~\u0000\u0000\u0006{\u00c9\u0006ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003N\u009dYppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003N\u009dNsr\u0000\u0011java.la"
+"ng.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0003N\u009dCppsr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0003\u0001>\n\u00cappsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sq\u0000~\u0000\u000f\u0002\u0010\u0092tppsr\u0000 com.sun"
+".msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq"
+"\u0000~\u0000\u0012xq\u0000~\u0000\u0003\u0002\u0010\u0092iq\u0000~\u0000\u0016psq\u0000~\u0000\u0018\u0001\u00e9\u0003\u00e5ppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)s"
+"q\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001"
+"/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsilo"
+"nExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0015\u0001psq\u0000~\u00006t\u0000\rfedex_acc_n"
+"brt\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u000f\u0003-+\u00a8ppsq\u0000~\u0000\u0011\u0003-+\u009dq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0003-+\u0092ppq\u0000~\u0000\u001bsq\u0000~"
+"\u0000\u000f\u0001\u00ef \u00c3ppsq\u0000~\u0000-\u0001\u00ef \u00b8q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\tc"
+"ust_nameq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004\u0098\u00edRppsq\u0000~\u0000\u0011\u0004\u0098\u00edGq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u0098\u00ed<pps"
+"q\u0000~\u0000\u0018\u0001\u00a6h_ppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nb"
+"aseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001dq"
+"\u0000~\u0000#t\u0000\u0003intq\u0000~\u00004sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype"
+".xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixed"
+"Z\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000OL\u0000\fconcreteTypet\u0000\'Lcom/"
+"sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000\u001fppq"
+"\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000Sppq\u0000~\u00004\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000#t\u0000\u0004longq\u0000~\u00004sq\u0000~\u0000Rppq\u0000~\u00004\u0000\u0001sq\u0000~\u0000Yppq\u0000~\u00004\u0000\u0000s"
+"r\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000"
+"#t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataType"
+"WithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Vppq\u0000~\u00004\u0001\u0000sr\u0000#com."
+"sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007deci"
+"malq\u0000~\u00004q\u0000~\u0000gt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000at\u0000\fminInclusivesr\u0000\u000eja"
+"va.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002"
+"\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000at\u0000\fmaxInclusivesq\u0000~\u0000k\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\\q\u0000~\u0000jsr\u0000\u0011"
+"java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000l\u0080\u0000\u0000\u0000q\u0000~\u0000\\q\u0000~\u0000nsq\u0000~"
+"\u0000p\u007f\u00ff\u00ff\u00ffq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Qq\u0000~\u0000#sq\u0000~\u0000\u000f\u0002\u00f2\u0084\u00d8ppsq\u0000~\u0000-\u0002\u00f2\u0084\u00cdq\u0000~\u0000\u0016pq\u0000~\u0000/"
+"sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\ncourier_idq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004\u00f6,C"
+"ppsq\u0000~\u0000\u0011\u0004\u00f6,8q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u00f6,-ppq\u0000~\u0000Lsq\u0000~\u0000\u000f\u0003O\u00c3\u00c9ppsq\u0000~\u0000-\u0003O\u00c3\u00beq\u0000"
+"~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fchk_agent_idq\u0000~\u0000@q\u0000~\u0000"
+"<sq\u0000~\u0000\u000f\u0004\u000f\u000b&ppsq\u0000~\u0000\u0011\u0004\u000f\u000b\u001bq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u000f\u000b\u0010ppsq\u0000~\u0000\u0018\u0001\u00d8\u00c58ppq\u0000~\u0000gq"
+"\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000hq\u0000~\u0000#sq\u0000~\u0000\u000f\u00026E\u00d3ppsq\u0000~\u0000-\u00026E\u00c8q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q"
+"\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fpymt_tot_amtq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0004\u0094\u00925ppsq\u0000"
+"~\u0000\u0011\u0004\u0094\u0092*q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u0094\u0092\u001fppq\u0000~\u0000\u001bsq\u0000~\u0000\u000f\u0003V\u0087Pppsq\u0000~\u0000-\u0003V\u0087Eq\u0000~\u0000\u0016pq"
+"\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fpymt_doc_nbrq\u0000~\u0000@q\u0000~\u0000<sq\u0000~"
+"\u0000\u000f\u0004\u0003\u000b\u00aappsq\u0000~\u0000\u0011\u0004\u0003\u000b\u009fq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0004\u0003\u000b\u0094ppq\u0000~\u0000Lsq\u0000~\u0000\u000f\u0002\\\u00a30ppsq\u0000~\u0000-"
+"\u0002\\\u00a3%q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\tpymt_typeq\u0000~\u0000@q"
+"\u0000~\u0000<sq\u0000~\u0000\u000f\u0003\u00e9Pippsq\u0000~\u0000\u0011\u0003\u00e9P^q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0003\u00e9PSppq\u0000~\u0000\u001bsq\u0000~\u0000\u000f\u0002\u00abE\u0084"
+"ppsq\u0000~\u0000-\u0002\u00abEyq\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\fpymt_cu"
+"rr_cdq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0005\u0018|\u00cappsq\u0000~\u0000\u0011\u0005\u0018|\u00bfq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0005\u0018|\u00b4ppq\u0000~\u0000"
+"\u0084sq\u0000~\u0000\u000f\u0003?\u00b7wppsq\u0000~\u0000-\u0003?\u00b7lq\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000"
+"6t\u0000\texch_rateq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0006\u00d2\u00ad\u0088ppsq\u0000~\u0000\u000f\u0006\u00d2\u00ad}q\u0000~\u0000\u0016psq\u0000~\u0000\u0011\u0001\u008e\u00d7"
+"\u009cq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u000f\u0001\u008e\u00d7\u0091ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003\u0001\u008e\u00d7\u0086q\u0000~\u0000\u0016psq\u0000~\u0000-\u0001\u008e\u00d7\u0083q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Exp"
+"ression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000=psr\u0000 co"
+"m.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007q\u0000~\u0000<sq\u0000~\u00006t\u0000"
+"@com.fedex.lacitd.cashcontrol.interfaces.importPayments.Appl"
+"iedTot\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011\u0005C\u00d5"
+"\u00dfq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0005C\u00d5\u00d4ppsq\u0000~\u0000\u0011\u0001\u008e\u00d7\u009cpp\u0000sq\u0000~\u0000\u000f\u0001\u008e\u00d7\u0091ppsq\u0000~\u0000\u00af\u0001\u008e\u00d7\u0086q\u0000~\u0000\u0016"
+"psq\u0000~\u0000-\u0001\u008e\u00d7\u0083q\u0000~\u0000\u0016pq\u0000~\u0000\u00b4q\u0000~\u0000\u00b6q\u0000~\u0000<sq\u0000~\u00006t\u0000Dcom.fedex.lacitd.ca"
+"shcontrol.interfaces.importPayments.AppliedToTypeq\u0000~\u0000\u00b9sq\u0000~\u0000\u000f"
+"\u0003\u00b4\u00fe3ppsq\u0000~\u0000-\u0003\u00b4\u00fe(q\u0000~\u0000\u0016pq\u0000~\u0000/sq\u0000~\u00006q\u0000~\u00009q\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u00006t\u0000\napp"
+"lied_toq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f\u0003\u0084\u00b6Cppsq\u0000~\u0000-\u0003\u0084\u00b68q\u0000~\u0000\u0016pq\u0000~\u0000Lsq\u0000~\u00006t\u0000\u0003n"
+"umq\u0000~\u0000@q\u0000~\u0000<sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00cc[\u0000\u0005tablet\u0000![Lcom/sun/m"
+"sv/grammar/Expression;xp\u0000\u0000\u0000.\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.E"
+"xpression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppq\u0000~\u0000\u0081pppppq\u0000~\u0000\bq\u0000~\u0000\u008bpp"
+"ppppppq\u0000~\u0000{ppppq\u0000~\u0000\u00a5pppq\u0000~\u0000\u0095pq\u0000~\u0000\u008eq\u0000~\u0000\u009dq\u0000~\u0000\u000eq\u0000~\u0000\fpppppppq\u0000~\u0000"
+"yq\u0000~\u0000\u0006pppq\u0000~\u0000\u00a3ppq\u0000~\u0000Cq\u0000~\u0000\u000bq\u0000~\u0000\u0093q\u0000~\u0000\u009bpppppppppppppppq\u0000~\u0000\u0007pq\u0000~"
+"\u0000|q\u0000~\u0000Aq\u0000~\u0000\nq\u0000~\u0000\u009epppppq\u0000~\u0000\u0096pppppppppppq\u0000~\u0000Dpppppppppppq\u0000~\u0000Kp"
+"ppppppppppppq\u0000~\u0000\u0017pq\u0000~\u0000\u00c7pppppq\u0000~\u0000Ippppppppq\u0000~\u0000\u0086q\u0000~\u0000\tpppq\u0000~\u0000\u0010p"
+"q\u0000~\u0000\u00acppq\u0000~\u0000\u00b1q\u0000~\u0000\u00beq\u0000~\u0000\u00bbpppppq\u0000~\u0000\u00abpq\u0000~\u0000tq\u0000~\u0000\u00aeq\u0000~\u0000\u00bdq\u0000~\u0000\u00c2pq\u0000~\u0000,p"
+"pppppppppq\u0000~\u0000\rpq\u0000~\u0000\u0083pq\u0000~\u0000\u0005ppq\u0000~\u0000\u00a6pq\u0000~\u0000\u008dppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.PoaPaymentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  30 :
                        if (("applied_to" == ___local)&&("" == ___uri)) {
                            _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToImpl.class), 31, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("applied_to" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 32;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  6 :
                        if (("cust_name" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  31 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("fedex_acc_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  32 :
                        if (("poa_detail" == ___local)&&("" == ___uri)) {
                            _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("poa_detail" == ___local)&&("" == ___uri)) {
                            _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  21 :
                        if (("pymt_type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  27 :
                        if (("exch_rate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  24 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  12 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        if (("applied_to" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 31;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  30 :
                        state = 31;
                        continue outer;
                    case  23 :
                        if (("pymt_type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("cust_name" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  31 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  32 :
                        _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromLeaveElement((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  29 :
                        if (("exch_rate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  26 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("fedex_acc_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  17 :
                        if (("pymt_tot_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  30 :
                        state = 31;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  31 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  32 :
                        _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromEnterAttribute((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  30 :
                        state = 31;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  31 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  32 :
                        _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromLeaveAttribute((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  28 :
                            eatText3(value);
                            state = 29;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  30 :
                            state = 31;
                            continue outer;
                        case  22 :
                            eatText4(value);
                            state = 23;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  19 :
                            eatText5(value);
                            state = 20;
                            return ;
                        case  31 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  10 :
                            eatText6(value);
                            state = 11;
                            return ;
                        case  4 :
                            eatText7(value);
                            state = 5;
                            return ;
                        case  32 :
                            _AppliedTo = ((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl) spawnChildFromText((com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.AppliedToTypeImpl.class), 33, value));
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  13 :
                            eatText8(value);
                            state = 14;
                            return ;
                        case  25 :
                            eatText9(value);
                            state = 26;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  16 :
                            eatText10(value);
                            state = 17;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CustName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExchRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PymtType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CourierId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CourierId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FedexAccNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ChkAgentId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ChkAgentId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtTotAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
