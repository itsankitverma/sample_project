//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.02 at 12:04:00 VET 
//


package com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl;

public class OacPaymentTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.importPayments.OacPaymentType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.ValidatableObject
{

    protected java.math.BigDecimal _PymtDocAmt;
    protected java.lang.String _PymtDocNbr;
    protected boolean has_CourierId;
    protected int _CourierId;
    protected java.util.Calendar _PymtDt;
    protected java.lang.String _PymtCurrCd;
    protected boolean has_Num;
    protected boolean _Num;
    protected boolean has_PymtDocType;
    protected int _PymtDocType;
    protected java.util.Calendar _OacDt;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.OacPaymentType.class);
    }

    public java.math.BigDecimal getPymtDocAmt() {
        return _PymtDocAmt;
    }

    public void setPymtDocAmt(java.math.BigDecimal value) {
        _PymtDocAmt = value;
    }

    public java.lang.String getPymtDocNbr() {
        return _PymtDocNbr;
    }

    public void setPymtDocNbr(java.lang.String value) {
        _PymtDocNbr = value;
    }

    public int getCourierId() {
        return _CourierId;
    }

    public void setCourierId(int value) {
        _CourierId = value;
        has_CourierId = true;
    }

    public java.util.Calendar getPymtDt() {
        return _PymtDt;
    }

    public void setPymtDt(java.util.Calendar value) {
        _PymtDt = value;
    }

    public java.lang.String getPymtCurrCd() {
        return _PymtCurrCd;
    }

    public void setPymtCurrCd(java.lang.String value) {
        _PymtCurrCd = value;
    }

    public boolean isNum() {
        return _Num;
    }

    public void setNum(boolean value) {
        _Num = value;
        has_Num = true;
    }

    public int getPymtDocType() {
        return _PymtDocType;
    }

    public void setPymtDocType(int value) {
        _PymtDocType = value;
        has_PymtDocType = true;
    }

    public java.util.Calendar getOacDt() {
        return _OacDt;
    }

    public void setOacDt(java.util.Calendar value) {
        _OacDt = value;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.OacPaymentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_OacDt!= null) {
            context.startElement("", "oac_dt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _OacDt)), "OacDt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_CourierId) {
            context.startElement("", "courier_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _CourierId)), "CourierId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDt!= null) {
            context.startElement("", "pymt_dt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _PymtDt)), "PymtDt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocAmt!= null) {
            context.startElement("", "pymt_doc_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtDocAmt)), "PymtDocAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocNbr!= null) {
            context.startElement("", "pymt_doc_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtDocNbr), "PymtDocNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PymtDocType) {
            context.startElement("", "pymt_doc_type");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PymtDocType)), "PymtDocType");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCurrCd!= null) {
            context.startElement("", "pymt_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtCurrCd), "PymtCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.OacPaymentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp!A\u0093\u001dppsq\u0000~\u0000\u0000 \u007f\u00c6\u00aappsq\u0000~\u0000\u0000\u001b"
+"f\u00eb\u00d9ppsq\u0000~\u0000\u0000\u0017\u0000#\"ppsq\u0000~\u0000\u0000\u0012\u00f9\u00e7\u000fppsq\u0000~\u0000\u0000\r\u00f2$\u008dppsq\u0000~\u0000\u0000\t\u00da\u00e2\u0011ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0004g\u000b9ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0004g\u000b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0004g\u000b#ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001M\u00d7hppsr\u0000!com.sun.msv.datatype"
+".xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTim"
+"eBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwh"
+"iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
+"\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0004datesr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000"
+"\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q\u0000~\u0000!sq\u0000~\u0000\f\u0003\u00193\u00b6ppsr\u0000 com.sun."
+"msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000"
+"~\u0000\u000fxq\u0000~\u0000\u0003\u0003\u00193\u00abq\u0000~\u0000\u0013psq\u0000~\u0000\u0015\u0001\u00e9\u0003\u00e5ppsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNameq\u0000~\u0000%q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u00000"
+"q\u0000~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.grammar.Name"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0012\u0001psq\u0000~\u00002t\u0000\u0006oac_dtt\u0000\u0000q\u0000~\u00008sq\u0000~\u0000\f\u0005"
+"s\u00d6\u00d3ppsq\u0000~\u0000\u000e\u0005s\u00d6\u00c8q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0005s\u00d6\u00bdppsq\u0000~\u0000\u0015\u0001\u00a6h_ppsr\u0000 com.sun.ms"
+"v.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xs"
+"d.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/"
+"datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0003intq\u0000~\u0000%sr\u0000*com.su"
+"n.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.m"
+"sv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/l"
+"ang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueCon"
+"straintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataType"
+"WithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bb"
+"aseTypeq\u0000~\u0000CL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Conc"
+"reteType;L\u0000\tfacetNameq\u0000~\u0000\u001exq\u0000~\u0000\u001dppq\u0000~\u0000%\u0000\u0001sr\u0000*com.sun.msv.dat"
+"atype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gppq\u0000~\u0000%\u0000\u0000sr\u0000!com"
+".sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000!t\u0000\u0004longq"
+"\u0000~\u0000%sq\u0000~\u0000Fppq\u0000~\u0000%\u0000\u0001sq\u0000~\u0000Mppq\u0000~\u0000%\u0000\u0000sr\u0000$com.sun.msv.datatype.x"
+"sd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000!t\u0000\u0007integerq\u0000~\u0000%sr\u0000,com.s"
+"un.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr"
+"\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFace"
+"tT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u0000%\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Numb"
+"erType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0007decimalq\u0000~\u0000%q\u0000~\u0000[t\u0000\u000efractionD"
+"igits\u0000\u0000\u0000\u0000q\u0000~\u0000Ut\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000"
+"\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Ut\u0000\fmaxIn"
+"clusivesq\u0000~\u0000_\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Pq\u0000~\u0000^sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878"
+"\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000`\u0080\u0000\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000bsq\u0000~\u0000d\u007f\u00ff\u00ff\u00ffq\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000Eq\u0000~"
+"\u0000!sq\u0000~\u0000\f\u0003\u00cdnYppsq\u0000~\u0000+\u0003\u00cdnNq\u0000~\u0000\u0013pq\u0000~\u0000-sq\u0000~\u00002q\u0000~\u00005q\u0000~\u00006q\u0000~\u00008sq\u0000~"
+"\u00002t\u0000\ncourier_idq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\f\u0004\u0017Bwppsq\u0000~\u0000\u000e\u0004\u0017Blq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000"
+"\u0004\u0017Bappq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0002\u00c9j\u00f4ppsq\u0000~\u0000+\u0002\u00c9j\u00e9q\u0000~\u0000\u0013pq\u0000~\u0000-sq\u0000~\u00002q\u0000~\u00005q\u0000~\u00006"
+"q\u0000~\u00008sq\u0000~\u00002t\u0000\u0007pymt_dtq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\f\u0005\u0007\u00c2}ppsq\u0000~\u0000\u000e\u0005\u0007\u00c2rq\u0000~\u0000\u0013p\u0000"
+"sq\u0000~\u0000\u0000\u0005\u0007\u00c2gppsq\u0000~\u0000\u0015\u0001\u00d8\u00c58ppq\u0000~\u0000[q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000\\q\u0000~\u0000!sq\u0000~\u0000\f\u0003.\u00fd*"
+"ppsq\u0000~\u0000+\u0003.\u00fd\u001fq\u0000~\u0000\u0013pq\u0000~\u0000-sq\u0000~\u00002q\u0000~\u00005q\u0000~\u00006q\u0000~\u00008sq\u0000~\u00002t\u0000\fpymt_do"
+"c_amtq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\f\u0004\u0006<\u000eppsq\u0000~\u0000\u000e\u0004\u0006<\u0003q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0004\u0006;\u00f8ppsq\u0000~"
+"\u0000\u0015\u0001>\n\u00cappsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000"
+"\risAlwaysValidxq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0006stringsr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$\u0001q\u0000~\u0000\'sq\u0000~\u0000("
+"q\u0000~\u0000\u0085q\u0000~\u0000!sq\u0000~\u0000\f\u0002\u00c81)ppsq\u0000~\u0000+\u0002\u00c81\u001eq\u0000~\u0000\u0013pq\u0000~\u0000-sq\u0000~\u00002q\u0000~\u00005q\u0000~\u00006q"
+"\u0000~\u00008sq\u0000~\u00002t\u0000\fpymt_doc_nbrq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\f\u0004f\u00c8\u00b2ppsq\u0000~\u0000\u000e\u0004f\u00c8\u00a7q\u0000~"
+"\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0004f\u00c8\u009cppq\u0000~\u0000@sq\u0000~\u0000\f\u0002\u00c0`8ppsq\u0000~\u0000+\u0002\u00c0`-q\u0000~\u0000\u0013pq\u0000~\u0000-sq\u0000~\u00002"
+"q\u0000~\u00005q\u0000~\u00006q\u0000~\u00008sq\u0000~\u00002t\u0000\rpymt_doc_typeq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\f\u0005\u0018\u00da\u00ccpps"
+"q\u0000~\u0000\u000e\u0005\u0018\u00da\u00c1q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0005\u0018\u00da\u00b6ppq\u0000~\u0000\u0082sq\u0000~\u0000\f\u0003\u00da\u00cf\u00e7ppsq\u0000~\u0000+\u0003\u00da\u00cf\u00dcq\u0000~\u0000\u0013"
+"pq\u0000~\u0000-sq\u0000~\u00002q\u0000~\u00005q\u0000~\u00006q\u0000~\u00008sq\u0000~\u00002t\u0000\fpymt_curr_cdq\u0000~\u0000<q\u0000~\u00008sq"
+"\u0000~\u0000\f\u0000\u00c1\u00ccnppsq\u0000~\u0000+\u0000\u00c1\u00cccq\u0000~\u0000\u0013psq\u0000~\u0000\u0015\u0000q}\u00a1ppsr\u0000$com.sun.msv.dataty"
+"pe.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0007booleanq\u0000~\u0000%q\u0000~\u0000\'"
+"sq\u0000~\u0000(q\u0000~\u0000\u00a3q\u0000~\u0000!sq\u0000~\u00002t\u0000\u0003numq\u0000~\u0000<q\u0000~\u00008sr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq"
+"\u0000~\u0000\u00a8[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001d\u0000\u0000\u00009pu"
+"r\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppp"
+"q\u0000~\u0000\u0006pq\u0000~\u0000opppq\u0000~\u0000hppppppppq\u0000~\u0000\bppppppppq\u0000~\u0000mq\u0000~\u0000\u0098pppppppq\u0000~"
+"\u0000ppppppq\u0000~\u0000\u009epppppppq\u0000~\u0000\u0096pppq\u0000~\u0000\u0005ppppppq\u0000~\u0000zppppppppq\u0000~\u0000\u0099pppq"
+"\u0000~\u0000\u0081pppppppppppq\u0000~\u0000\u0090pppppppppq\u0000~\u0000\u007fppq\u0000~\u0000wppppq\u0000~\u0000\tpppq\u0000~\u0000\u008epp"
+"pppppq\u0000~\u0000\u0089pq\u0000~\u0000\u0014ppq\u0000~\u0000upppppppq\u0000~\u0000\u000bpppppq\u0000~\u0000\u0007pq\u0000~\u0000\u0091ppq\u0000~\u0000\rpp"
+"ppppppq\u0000~\u0000*q\u0000~\u0000?ppppppppppppppq\u0000~\u0000\npppppq\u0000~\u0000=ppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.OacPaymentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("oac_dt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  21 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  12 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("oac_dt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("pymt_dt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  8 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  23 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  4 :
                            eatText3(value);
                            state = 5;
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  22 :
                            eatText4(value);
                            state = 23;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  10 :
                            eatText5(value);
                            state = 11;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  16 :
                            eatText6(value);
                            state = 17;
                            return ;
                        case  19 :
                            eatText7(value);
                            state = 20;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  13 :
                            eatText8(value);
                            state = 14;
                            return ;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CourierId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CourierId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OacDt = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDt = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PymtDocType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
