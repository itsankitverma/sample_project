//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.02 at 12:04:00 VET 
//


package com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl;

public class RodPaymentTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.importPayments.RodPaymentType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.ValidatableObject
{

    protected java.math.BigDecimal _PymtDocAmt;
    protected java.lang.String _Awb;
    protected boolean has_CourierId;
    protected int _CourierId;
    protected java.math.BigDecimal _RecRodAmt;
    protected boolean has_ChkAgentId;
    protected int _ChkAgentId;
    protected java.math.BigDecimal _PymtCashAmt;
    protected boolean has_PymtDocType;
    protected int _PymtDocType;
    protected java.lang.String _RecNbr;
    protected java.lang.String _CustName;
    protected java.math.BigDecimal _RecTotAmt;
    protected java.lang.String _PymtDocNbr;
    protected java.math.BigDecimal _PymtTotalAmt;
    protected java.lang.String _RecCurrCd;
    protected java.util.Calendar _RecDate;
    protected java.util.Calendar _PymtDate;
    protected java.lang.String _PymtCurrCd;
    protected boolean has_Num;
    protected int _Num;
    protected java.math.BigDecimal _RecAncChrgAmt;
    protected java.math.BigDecimal _ExchRate;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.RodPaymentType.class);
    }

    public java.math.BigDecimal getPymtDocAmt() {
        return _PymtDocAmt;
    }

    public void setPymtDocAmt(java.math.BigDecimal value) {
        _PymtDocAmt = value;
    }

    public java.lang.String getAwb() {
        return _Awb;
    }

    public void setAwb(java.lang.String value) {
        _Awb = value;
    }

    public int getCourierId() {
        return _CourierId;
    }

    public void setCourierId(int value) {
        _CourierId = value;
        has_CourierId = true;
    }

    public java.math.BigDecimal getRecRodAmt() {
        return _RecRodAmt;
    }

    public void setRecRodAmt(java.math.BigDecimal value) {
        _RecRodAmt = value;
    }

    public int getChkAgentId() {
        return _ChkAgentId;
    }

    public void setChkAgentId(int value) {
        _ChkAgentId = value;
        has_ChkAgentId = true;
    }

    public java.math.BigDecimal getPymtCashAmt() {
        return _PymtCashAmt;
    }

    public void setPymtCashAmt(java.math.BigDecimal value) {
        _PymtCashAmt = value;
    }

    public int getPymtDocType() {
        return _PymtDocType;
    }

    public void setPymtDocType(int value) {
        _PymtDocType = value;
        has_PymtDocType = true;
    }

    public java.lang.String getRecNbr() {
        return _RecNbr;
    }

    public void setRecNbr(java.lang.String value) {
        _RecNbr = value;
    }

    public java.lang.String getCustName() {
        return _CustName;
    }

    public void setCustName(java.lang.String value) {
        _CustName = value;
    }

    public java.math.BigDecimal getRecTotAmt() {
        return _RecTotAmt;
    }

    public void setRecTotAmt(java.math.BigDecimal value) {
        _RecTotAmt = value;
    }

    public java.lang.String getPymtDocNbr() {
        return _PymtDocNbr;
    }

    public void setPymtDocNbr(java.lang.String value) {
        _PymtDocNbr = value;
    }

    public java.math.BigDecimal getPymtTotalAmt() {
        return _PymtTotalAmt;
    }

    public void setPymtTotalAmt(java.math.BigDecimal value) {
        _PymtTotalAmt = value;
    }

    public java.lang.String getRecCurrCd() {
        return _RecCurrCd;
    }

    public void setRecCurrCd(java.lang.String value) {
        _RecCurrCd = value;
    }

    public java.util.Calendar getRecDate() {
        return _RecDate;
    }

    public void setRecDate(java.util.Calendar value) {
        _RecDate = value;
    }

    public java.util.Calendar getPymtDate() {
        return _PymtDate;
    }

    public void setPymtDate(java.util.Calendar value) {
        _PymtDate = value;
    }

    public java.lang.String getPymtCurrCd() {
        return _PymtCurrCd;
    }

    public void setPymtCurrCd(java.lang.String value) {
        _PymtCurrCd = value;
    }

    public int getNum() {
        return _Num;
    }

    public void setNum(int value) {
        _Num = value;
        has_Num = true;
    }

    public java.math.BigDecimal getRecAncChrgAmt() {
        return _RecAncChrgAmt;
    }

    public void setRecAncChrgAmt(java.math.BigDecimal value) {
        _RecAncChrgAmt = value;
    }

    public java.math.BigDecimal getExchRate() {
        return _ExchRate;
    }

    public void setExchRate(java.math.BigDecimal value) {
        _ExchRate = value;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.RodPaymentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Awb!= null) {
            context.startElement("", "awb");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Awb), "Awb");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecNbr!= null) {
            context.startElement("", "rec_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RecNbr), "RecNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecDate!= null) {
            context.startElement("", "rec_date");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RecDate)), "RecDate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CustName!= null) {
            context.startElement("", "cust_name");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CustName), "CustName");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecCurrCd!= null) {
            context.startElement("", "rec_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RecCurrCd), "RecCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ExchRate!= null) {
            context.startElement("", "exch_rate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ExchRate)), "ExchRate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecTotAmt!= null) {
            context.startElement("", "rec_tot_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RecTotAmt)), "RecTotAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecRodAmt!= null) {
            context.startElement("", "rec_rod_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RecRodAmt)), "RecRodAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecAncChrgAmt!= null) {
            context.startElement("", "rec_anc_chrg_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RecAncChrgAmt)), "RecAncChrgAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_CourierId) {
            context.startElement("", "courier_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _CourierId)), "CourierId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ChkAgentId) {
            context.startElement("", "chk_agent_id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ChkAgentId)), "ChkAgentId");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDate!= null) {
            context.startElement("", "pymt_date");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _PymtDate)), "PymtDate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtTotalAmt!= null) {
            context.startElement("", "pymt_total_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtTotalAmt)), "PymtTotalAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCashAmt!= null) {
            context.startElement("", "pymt_cash_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtCashAmt)), "PymtCashAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocAmt!= null) {
            context.startElement("", "pymt_doc_amt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PymtDocAmt)), "PymtDocAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtDocNbr!= null) {
            context.startElement("", "pymt_doc_nbr");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtDocNbr), "PymtDocNbr");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PymtDocType) {
            context.startElement("", "pymt_doc_type");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PymtDocType)), "PymtDocType");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PymtCurrCd!= null) {
            context.startElement("", "pymt_curr_cd");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PymtCurrCd), "PymtCurrCd");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.importPayments.RodPaymentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpO\u0094\u00f4\u00b8ppsq\u0000~\u0000\u0000L?\u00f1\u009eppsq\u0000~\u0000\u0000G"
+"\u00b4j\u00eappsq\u0000~\u0000\u0000C\u00d6N7ppsq\u0000~\u0000\u0000@i]4ppsq\u0000~\u0000\u0000;\u00ae\u00ff\u001dppsq\u0000~\u0000\u00007bG\u0004ppsq\u0000~\u0000\u00002"
+"A\u00ea\u00e4ppsq\u0000~\u0000\u0000.\u0006\u0013Hppsq\u0000~\u0000\u0000(\u008b\u0016\u008bppsq\u0000~\u0000\u0000$\u0092FKppsq\u0000~\u0000\u0000 \u009c\u00cb\u00e1ppsq\u0000~\u0000\u0000\u001b"
+"\u009fb\u00eappsq\u0000~\u0000\u0000\u0017T\u0001\u00d0ppsq\u0000~\u0000\u0000\u0012:\u001a\u0007ppsq\u0000~\u0000\u0000\u000e\u0083p\u00fappsq\u0000~\u0000\u0000\n\u00d4\u00d5\u00d3ppsq\u0000~\u0000\u0000\u0007"
+"P\u00cfhppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0004\u0013\u00c5Up"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0004\u0013\u00c5Jsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0004\u0013\u00c5?ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001>\n\u00cappsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"
+"/lang/String;L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000"
+"(xpq\u0000~\u0000,q\u0000~\u0000+sq\u0000~\u0000\u0017\u0002\u00d5\u00bapppsr\u0000 com.sun.msv.grammar.AttributeEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001axq\u0000~\u0000\u0003\u0002\u00d5\u00baeq\u0000~\u0000\u001epsq\u0000~"
+"\u0000 \u0001\u00e9\u0003\u00e5ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000%q\u0000~\u0000+t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000:q\u0000~\u0000+sr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000"
+"\fnamespaceURIq\u0000~\u0000(xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u001d\u0001psq\u0000~\u0000>t\u0000\u0003awbt\u0000\u0000q\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003=\n\u000eppsq\u0000~\u0000\u0019\u0003=\n\u0003q\u0000"
+"~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003=\t\u00f8ppq\u0000~\u0000#sq\u0000~\u0000\u0017\u0001\u00fe\u00ff)ppsq\u0000~\u00005\u0001\u00fe\u00ff\u001eq\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000"
+">q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0007rec_nbrq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003\u0084\u0006fppsq\u0000~\u0000\u0019"
+"\u0003\u0084\u0006[q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003\u0084\u0006Pppsq\u0000~\u0000 \u0001M\u00d7hppsr\u0000!com.sun.msv.datatype."
+"xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTime"
+"BaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0004dateq\u0000~\u0000<q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000Xq\u0000"
+"~\u0000+sq\u0000~\u0000\u0017\u00026.\u00e3ppsq\u0000~\u00005\u00026.\u00d8q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000"
+"~\u0000>t\u0000\brec_dateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003\u00ae\u009b\"ppsq\u0000~\u0000\u0019\u0003\u00ae\u009b\u0017q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003"
+"\u00ae\u009b\fppq\u0000~\u0000#sq\u0000~\u0000\u0017\u0002p\u0090=ppsq\u0000~\u00005\u0002p\u00902q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq"
+"\u0000~\u0000Dsq\u0000~\u0000>t\u0000\tcust_nameq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003\u00b6\u00a9\bppsq\u0000~\u0000\u0019\u0003\u00b6\u00a8\u00fdq\u0000~\u0000\u001ep"
+"\u0000sq\u0000~\u0000\u0000\u0003\u00b6\u00a8\u00f2ppq\u0000~\u0000#sq\u0000~\u0000\u0017\u0002x\u009e#ppsq\u0000~\u00005\u0002x\u009e\u0018q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~"
+"\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000brec_curr_cdq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0005\u0019\u00e7\u00c4ppsq\u0000~\u0000\u0019"
+"\u0005\u0019\u00e7\u00b9q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0005\u0019\u00e7\u00aeppsq\u0000~\u0000 \u0001\u00d8\u00c58ppsr\u0000#com.sun.msv.datatype."
+"xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u00001sq\u0000~"
+"\u00002q\u0000~\u0000uq\u0000~\u0000+sq\u0000~\u0000\u0017\u0003A\"qppsq\u0000~\u00005\u0003A\"fq\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000"
+"Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\texch_rateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0004Ka\u0015ppsq\u0000~\u0000\u0019\u0004Ka\nq\u0000~\u0000"
+"\u001ep\u0000sq\u0000~\u0000\u0000\u0004K`\u00ffppq\u0000~\u0000rsq\u0000~\u0000\u0017\u0002r\u009b\u00c2ppsq\u0000~\u00005\u0002r\u009b\u00b7q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q"
+"\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000brec_tot_amtq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0004\u00fdh\u00f2ppsq\u0000~"
+"\u0000\u0019\u0004\u00fdh\u00e7q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0004\u00fdh\u00dcppq\u0000~\u0000rsq\u0000~\u0000\u0017\u0003$\u00a3\u009fppsq\u0000~\u00005\u0003$\u00a3\u0094q\u0000~\u0000\u001epq\u0000"
+"~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000brec_rod_amtq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017"
+"\u0003\u00f5zeppsq\u0000~\u0000\u0019\u0003\u00f5zZq\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003\u00f5zOppq\u0000~\u0000rsq\u0000~\u0000\u0017\u0002\u001c\u00b5\u0012ppsq\u0000~\u00005\u0002\u001c"
+"\u00b5\u0007q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0010rec_anc_chrg_amtq"
+"\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003\u00f8\u00d0;ppsq\u0000~\u0000\u0019\u0003\u00f8\u00d00q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003\u00f8\u00d0%ppsq\u0000~\u0000 \u0001\u00a6h_"
+"ppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun"
+".msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacets"
+"t\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0003in"
+"tq\u0000~\u0000<sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimi"
+"tValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.Data"
+"TypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needVa"
+"lueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u009aL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/d"
+"atatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000(xq\u0000~\u0000\'ppq\u0000~\u0000<\u0000\u0001sr\u0000"
+"*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009e"
+"ppq\u0000~\u0000<\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0099q\u0000~\u0000+t\u0000\u0004longq\u0000~\u0000<sq\u0000~\u0000\u009dppq\u0000~\u0000<\u0000\u0001sq\u0000~\u0000\u00a4ppq\u0000~\u0000<\u0000\u0000sr\u0000$com.su"
+"n.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0099q\u0000~\u0000+t\u0000\u0007integ"
+"erq\u0000~\u0000<sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexic"
+"alConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u00a1ppq\u0000~\u0000<\u0001\u0000q\u0000~\u0000tq\u0000~\u0000tt\u0000\u000efrac"
+"tionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00act\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df"
+"\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00act\u0000\f"
+"maxInclusivesq\u0000~\u0000\u00b3\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00a7q\u0000~\u0000\u00b2sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0"
+"\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00b4\u0080\u0000\u0000\u0000q\u0000~\u0000\u00a7q\u0000~\u0000\u00b6sq\u0000~\u0000\u00b8\u007f\u00ff\u00ff\u00ffq\u0000~\u00001sq\u0000~\u00002q\u0000~"
+"\u0000\u009cq\u0000~\u0000+sq\u0000~\u0000\u0017\u0002Rg\u00c1ppsq\u0000~\u00005\u0002Rg\u00b6q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000"
+"Dsq\u0000~\u0000>t\u0000\ncourier_idq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0005z\u00fc\u00b8ppsq\u0000~\u0000\u0019\u0005z\u00fc\u00adq\u0000~\u0000\u001ep\u0000s"
+"q\u0000~\u0000\u0000\u0005z\u00fc\u00a2ppq\u0000~\u0000\u0097sq\u0000~\u0000\u0017\u0003\u00d4\u0094>ppsq\u0000~\u00005\u0003\u00d4\u00943q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000A"
+"q\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\fchk_agent_idq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0004;\u00d7\u0097ppsq\u0000~\u0000\u0019\u0004"
+";\u00d7\u008cq\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0004;\u00d7\u0081ppq\u0000~\u0000Tsq\u0000~\u0000\u0017\u0002\u00ee\u0000\u0014ppsq\u0000~\u00005\u0002\u00ee\u0000\tq\u0000~\u0000\u001epq\u0000~\u00007"
+"sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\tpymt_dateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0005 \\\u001bp"
+"psq\u0000~\u0000\u0019\u0005 \\\u0010q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0005 \\\u0005ppq\u0000~\u0000rsq\u0000~\u0000\u0017\u0003G\u0096\u00c8ppsq\u0000~\u00005\u0003G\u0096\u00bdq\u0000~"
+"\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000epymt_total_amtq\u0000~\u0000Hq\u0000~"
+"\u0000Dsq\u0000~\u0000\u0017\u0004L\u00b8\u0014ppsq\u0000~\u0000\u0019\u0004L\u00b8\tq\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0004L\u00b7\u00feppq\u0000~\u0000rsq\u0000~\u0000\u0017\u0002s\u00f2\u00c1pp"
+"sq\u0000~\u00005\u0002s\u00f2\u00b6q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\rpymt_cash"
+"_amtq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0004\u00ba^\u0012ppsq\u0000~\u0000\u0019\u0004\u00ba^\u0007q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0004\u00ba]\u00fcppq\u0000~\u0000r"
+"sq\u0000~\u0000\u0017\u0002\u00e1\u0098\u00bfppsq\u0000~\u00005\u0002\u00e1\u0098\u00b4q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>"
+"t\u0000\fpymt_doc_amtq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003l\u00f0\u00feppsq\u0000~\u0000\u0019\u0003l\u00f0\u00f3q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000"
+"\u0003l\u00f0\u00e8ppq\u0000~\u0000#sq\u0000~\u0000\u0017\u0002.\u00e6\u0019ppsq\u0000~\u00005\u0002.\u00e6\u000eq\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000B"
+"q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\fpymt_doc_nbrq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0003\u00de\u001c\u00aeppsq\u0000~\u0000\u0019\u0003\u00de\u001c\u00a3q\u0000"
+"~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0003\u00de\u001c\u0098ppq\u0000~\u0000\u0097sq\u0000~\u0000\u0017\u00027\u00b44ppsq\u0000~\u00005\u00027\u00b4)q\u0000~\u0000\u001epq\u0000~\u00007sq\u0000~\u0000"
+">q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\rpymt_doc_typeq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017\u0004\u008b\u0086\u00afpp"
+"sq\u0000~\u0000\u0019\u0004\u008b\u0086\u00a4q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000\u0004\u008b\u0086\u0099ppq\u0000~\u0000#sq\u0000~\u0000\u0017\u0003M{\u00cappsq\u0000~\u00005\u0003M{\u00bfq\u0000~\u0000"
+"\u001epq\u0000~\u00007sq\u0000~\u0000>q\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000Dsq\u0000~\u0000>t\u0000\fpymt_curr_cdq\u0000~\u0000Hq\u0000~\u0000Ds"
+"q\u0000~\u0000\u0017\u0003U\u0003\u0015ppsq\u0000~\u00005\u0003U\u0003\nq\u0000~\u0000\u001epq\u0000~\u0000\u0097sq\u0000~\u0000>t\u0000\u0003numq\u0000~\u0000Hq\u0000~\u0000Dsr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthr"
+"esholdL\u0000\u0006parentq\u0000~\u0001\u0006[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Express"
+"ion;xp\u0000\u0000\u0000I\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n"
+"\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppq\u0000~\u00004pppppppppq\u0000~\u0000\u00bcpppppppppppq\u0000~\u0000\u000fppppppppppp"
+"ppq\u0000~\u0000\u00f4pq\u0000~\u0000\u00c4pppppppppq\u0000~\u0000\u0015ppppppppppppppppppppq\u0000~\u0000\u0096pppppppp"
+"pq\u0000~\u0000~pppppppppppq\u0000~\u0000\u0094q\u0000~\u0000\u000bq\u0000~\u0000\u0013q\u0000~\u0000\u00ccq\u0000~\u0000\u00f3q\u0000~\u0000Sq\u0000~\u0000\u00c3pppq\u0000~\u0000|"
+"pppppppppppppppq\u0000~\u0000\u00f1q\u0000~\u0000Qq\u0000~\u0000\u00c1q\u0000~\u0000\u0007ppq\u0000~\u0000\u000epppppppppppppq\u0000~\u0000q"
+"q\u0000~\u0000\u00ebq\u0000~\u0000\fpppppq\u0000~\u0000\u007fq\u0000~\u0000appppppppppppq\u0000~\u0000oq\u0000~\u0000\u00e9pppppq\u0000~\u0000\u00ecpq\u0000"
+"~\u0000_ppq\u0000~\u0000\u0086ppq\u0000~\u0000bppppq\u0000~\u0000\u00dbq\u0000~\u0000\u008eppppppppppppq\u0000~\u0000\u0010q\u0000~\u0000\u0084ppppppq"
+"\u0000~\u0000\u00d9q\u0000~\u0000\u008cq\u0000~\u0000wq\u0000~\u0000\tq\u0000~\u0000\u00fbppppppppppppq\u0000~\u0000ippppq\u0000~\u0000\u00f9ppq\u0000~\u0000\u0014ppq"
+"\u0000~\u0000\u00fcpppppppq\u0000~\u0000\u0087q\u0000~\u0000\u00cbpq\u0000~\u0000gppppq\u0000~\u0000\u00dcq\u0000~\u0000\u008fq\u0000~\u0000jpppq\u0000~\u0000\u00e3q\u0000~\u0000\rp"
+"ppppppq\u0000~\u0000\u00c9pq\u0000~\u0000\u0012ppppppppppq\u0000~\u0000\u00e1pppq\u0000~\u0000Kpppppppppppq\u0000~\u0000\u0005pppp"
+"pppppq\u0000~\u0000Ipppq\u0000~\u0000\nq\u0000~\u0000\u0016q\u0000~\u0000Lq\u0000~\u0000\u00d3pppppq\u0000~\u0001\u0001ppppq\u0000~\u0000\u00e4pppppppp"
+"q\u0000~\u0000\u00d1pppppppq\u0000~\u0000Zpppppppppppppppq\u0000~\u0000\u0006ppppq\u0000~\u0000\u001fpppppppppppppp"
+"q\u0000~\u0000\u00d4ppq\u0000~\u0000\u0011q\u0000~\u0000\bppq\u0000~\u0000\u0018"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.importPayments.impl.RodPaymentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  42 :
                        if (("pymt_cash_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  24 :
                        if (("rec_rod_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  3 :
                        if (("awb" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  57 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("rec_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  21 :
                        if (("rec_tot_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  12 :
                        if (("cust_name" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("exch_rate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        if (("rec_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  36 :
                        if (("pymt_date" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  39 :
                        if (("pymt_total_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  9 :
                        if (("rec_date" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  48 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  45 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  51 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  33 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  27 :
                        if (("rec_anc_chrg_amt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  30 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  54 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  35 :
                        if (("chk_agent_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("pymt_doc_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("rec_nbr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  14 :
                        if (("cust_name" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("pymt_date" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  32 :
                        if (("courier_id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  57 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("rec_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  26 :
                        if (("rec_rod_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  23 :
                        if (("rec_tot_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("pymt_total_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  56 :
                        if (("pymt_curr_cd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("exch_rate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("rec_date" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  5 :
                        if (("awb" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  53 :
                        if (("pymt_doc_type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("pymt_doc_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("pymt_cash_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("rec_anc_chrg_amt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  42 :
                        state = 45;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  57 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  42 :
                        state = 45;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  57 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  16 :
                            eatText2(value);
                            state = 17;
                            return ;
                        case  28 :
                            eatText3(value);
                            state = 29;
                            return ;
                        case  37 :
                            eatText4(value);
                            state = 38;
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            eatText5(value);
                            state = 8;
                            return ;
                        case  57 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  49 :
                            eatText6(value);
                            state = 50;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  34 :
                            eatText7(value);
                            state = 35;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  43 :
                            eatText8(value);
                            state = 44;
                            return ;
                        case  25 :
                            eatText9(value);
                            state = 26;
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  40 :
                            eatText10(value);
                            state = 41;
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  22 :
                            eatText11(value);
                            state = 23;
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  55 :
                            eatText12(value);
                            state = 56;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  46 :
                            eatText13(value);
                            state = 47;
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  10 :
                            eatText14(value);
                            state = 11;
                            return ;
                        case  13 :
                            eatText15(value);
                            state = 14;
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  19 :
                            eatText16(value);
                            state = 20;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  4 :
                            eatText17(value);
                            state = 5;
                            return ;
                        case  52 :
                            eatText18(value);
                            state = 53;
                            return ;
                        case  31 :
                            eatText19(value);
                            state = 32;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecAncChrgAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocNbr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ChkAgentId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ChkAgentId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCashAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecRodAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtTotalAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecTotAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtCurrCd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CustName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExchRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Awb = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PymtDocType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PymtDocType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CourierId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CourierId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
