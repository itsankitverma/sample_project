//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.03 at 04:46:07 CLT 
//


package com.fedex.lacitd.cashcontrol.interfaces.clearance.impl;

public class ReceivableTypeImpl implements com.fedex.lacitd.cashcontrol.interfaces.clearance.ReceivableType, com.sun.xml.bind.JAXBObject, com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.UnmarshallableObject, com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.XMLSerializable, com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.ValidatableObject
{

    protected java.lang.String _Mtn;
    protected java.lang.String _Customer;
    protected java.math.BigDecimal _RecPrepAmt;
    protected java.math.BigDecimal _RecAmount;
    protected java.lang.String _RecNumber;
    protected java.math.BigDecimal _RodAmount;
    protected java.lang.String _ReceiptNo;
    protected java.util.Calendar _RecDate;
    protected java.math.BigDecimal _AnchargeAmount;
    protected boolean has_Num;
    protected int _Num;
    protected com.fedex.lacitd.cashcontrol.interfaces.clearance.SurchargesType _Surcharges;
    protected java.lang.String _RecCurrency;
    protected java.lang.String _Location;
    protected java.math.BigDecimal _ExchRate;
    public final static java.lang.Class version = (com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.fedex.lacitd.cashcontrol.interfaces.clearance.ReceivableType.class);
    }

    public java.lang.String getMtn() {
        return _Mtn;
    }

    public void setMtn(java.lang.String value) {
        _Mtn = value;
    }

    public java.lang.String getCustomer() {
        return _Customer;
    }

    public void setCustomer(java.lang.String value) {
        _Customer = value;
    }

    public java.math.BigDecimal getRecPrepAmt() {
        return _RecPrepAmt;
    }

    public void setRecPrepAmt(java.math.BigDecimal value) {
        _RecPrepAmt = value;
    }

    public java.math.BigDecimal getRecAmount() {
        return _RecAmount;
    }

    public void setRecAmount(java.math.BigDecimal value) {
        _RecAmount = value;
    }

    public java.lang.String getRecNumber() {
        return _RecNumber;
    }

    public void setRecNumber(java.lang.String value) {
        _RecNumber = value;
    }

    public java.math.BigDecimal getRodAmount() {
        return _RodAmount;
    }

    public void setRodAmount(java.math.BigDecimal value) {
        _RodAmount = value;
    }

    public java.lang.String getReceiptNo() {
        return _ReceiptNo;
    }

    public void setReceiptNo(java.lang.String value) {
        _ReceiptNo = value;
    }

    public java.util.Calendar getRecDate() {
        return _RecDate;
    }

    public void setRecDate(java.util.Calendar value) {
        _RecDate = value;
    }

    public java.math.BigDecimal getAnchargeAmount() {
        return _AnchargeAmount;
    }

    public void setAnchargeAmount(java.math.BigDecimal value) {
        _AnchargeAmount = value;
    }

    public int getNum() {
        return _Num;
    }

    public void setNum(int value) {
        _Num = value;
        has_Num = true;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.clearance.SurchargesType getSurcharges() {
        return _Surcharges;
    }

    public void setSurcharges(com.fedex.lacitd.cashcontrol.interfaces.clearance.SurchargesType value) {
        _Surcharges = value;
    }

    public java.lang.String getRecCurrency() {
        return _RecCurrency;
    }

    public void setRecCurrency(java.lang.String value) {
        _RecCurrency = value;
    }

    public java.lang.String getLocation() {
        return _Location;
    }

    public void setLocation(java.lang.String value) {
        _Location = value;
    }

    public java.math.BigDecimal getExchRate() {
        return _ExchRate;
    }

    public void setExchRate(java.math.BigDecimal value) {
        _ExchRate = value;
    }

    public com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.UnmarshallingContext context) {
        return new com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.ReceivableTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Location!= null) {
            context.startElement("", "location");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Location), "Location");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Mtn!= null) {
            context.startElement("", "mtn");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Mtn), "Mtn");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Customer!= null) {
            context.startElement("", "customer");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Customer), "Customer");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecDate!= null) {
            context.startElement("", "recDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RecDate)), "RecDate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecNumber!= null) {
            context.startElement("", "recNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RecNumber), "RecNumber");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecCurrency!= null) {
            context.startElement("", "recCurrency");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RecCurrency), "RecCurrency");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ExchRate!= null) {
            context.startElement("", "exchRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ExchRate)), "ExchRate");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecAmount!= null) {
            context.startElement("", "recAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RecAmount)), "RecAmount");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RodAmount!= null) {
            context.startElement("", "rodAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RodAmount)), "RodAmount");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AnchargeAmount!= null) {
            context.startElement("", "anchargeAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _AnchargeAmount)), "AnchargeAmount");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RecPrepAmt!= null) {
            context.startElement("", "recPrepAmt");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RecPrepAmt)), "RecPrepAmt");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReceiptNo!= null) {
            context.startElement("", "receiptNo");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReceiptNo), "ReceiptNo");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Surcharges!= null) {
            if (_Surcharges instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
            } else {
                context.startElement("", "surcharges");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Num) {
            context.startAttribute("", "num");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Num)), "Num");
            } catch (java.lang.Exception e) {
                com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Surcharges!= null) {
            if (_Surcharges instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
            }
        }
    }

    public void serializeURIs(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Surcharges!= null) {
            if (_Surcharges instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Surcharges), "Surcharges");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.fedex.lacitd.cashcontrol.interfaces.clearance.ReceivableType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp2\u00a5|\bppsr\u0000!com.sun.msv.gra"
+"mmar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001/\u00ed{\u000fppsq\u0000~\u0000\u0006*\u008d\u00da}ppsq\u0000~\u0000\u0006\'"
+"+P\u001cppsq\u0000~\u0000\u0006$)\u00fa\u0015ppsq\u0000~\u0000\u0006 \u009c\u0012\u000fppsq\u0000~\u0000\u0006\u001b\u00f5c\u00f5ppsq\u0000~\u0000\u0006\u0018\u008f)zppsq\u0000~\u0000\u0006\u0014"
+"\u00e8~\u0018ppsq\u0000~\u0000\u0006\u0010\u00ab\u00aa\u0088ppsq\u0000~\u0000\u0006\f\u00c9\u00c5Lppsq\u0000~\u0000\u0006\n\u00ae/\u0099ppsq\u0000~\u0000\u0006\u0007,\u0088\u0098ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00c9\u00f5\u00c8ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00c9\u00f5\u00bdsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00c9\u00f5\u00b2ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00bd\u00c9\u00e8ppsr\u0000#com.sun.msv.datatype"
+".xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String"
+";L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006s"
+"tringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preser"
+"ve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u0000(q\u0000~\u0000"
+"\'sq\u0000~\u0000\u0013\u0001\f+\u00c5ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0016xq\u0000~\u0000\u0003\u0001\f+\u00baq\u0000~\u0000\u001apsq\u0000~\u0000\u001c\u0000\u00f1\u008e\u009eppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000*q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00006q\u0000~\u0000\'sr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceUR"
+"Iq\u0000~\u0000$xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~"
+"\u0000\u0019\u0001psq\u0000~\u0000:t\u0000\blocationt\u0000\u0000q\u0000~\u0000@sq\u0000~\u0000\u0013\u0004b\u0092\u00bbppsq\u0000~\u0000\u0015\u0004b\u0092\u00b0q\u0000~\u0000\u001ap\u0000sq"
+"\u0000~\u0000\u0000\u0004b\u0092\u00a5ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0002\u00a4\u00c8\u00b8ppsq\u0000~\u00001\u0002\u00a4\u00c8\u00adq\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q"
+"\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0003mtnq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003\u0081\u00a6\u00ecppsq\u0000~\u0000\u0015\u0003\u0081\u00a6\u00e1q\u0000~\u0000\u001ap\u0000"
+"sq\u0000~\u0000\u0000\u0003\u0081\u00a6\u00d6ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0001\u00c3\u00dc\u00e9ppsq\u0000~\u00001\u0001\u00c3\u00dc\u00deq\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000"
+"=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\bcustomerq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0002\u001b\u0095\u009eppsq\u0000~\u0000\u0015\u0002\u001b\u0095\u0093"
+"q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0002\u001b\u0095\u0088ppsq\u0000~\u0000\u001c\u0000\u008a\u0005Tppsr\u0000!com.sun.msv.datatype.xsd."
+"DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBase"
+"Type\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0004dateq\u0000~\u00008q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\\q\u0000~\u0000\'s"
+"q\u0000~\u0000\u0013\u0001\u0091\u0090/ppsq\u0000~\u00001\u0001\u0091\u0090$q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t"
+"\u0000\u0007recDateq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003\u00e1\u00e5\'ppsq\u0000~\u0000\u0015\u0003\u00e1\u00e5\u001cq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0003\u00e1\u00e5\u0011pp"
+"q\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0002$\u001b$ppsq\u0000~\u00001\u0002$\u001b\u0019q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@s"
+"q\u0000~\u0000:t\u0000\trecNumberq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0004<\u00d3{ppsq\u0000~\u0000\u0015\u0004<\u00d3pq\u0000~\u0000\u001ap\u0000sq\u0000~"
+"\u0000\u0000\u0004<\u00d3eppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0002\u007f\txppsq\u0000~\u00001\u0002\u007f\tmq\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~"
+"\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000brecCurrencyq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003\u00a6\u00abMppsq\u0000~\u0000\u0015\u0003\u00a6\u00abBq"
+"\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0003\u00a6\u00ab7ppsq\u0000~\u0000\u001c\u0001\u00c5\u0005\u0017ppsr\u0000#com.sun.msv.datatype.xsd.N"
+"umberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0007decimalq\u0000~\u00008q\u0000~\u0000-sq\u0000~\u0000.q\u0000~"
+"\u0000yq\u0000~\u0000\'sq\u0000~\u0000\u0013\u0001\u00e1\u00a6\u001bppsq\u0000~\u00001\u0001\u00e1\u00a6\u0010q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000"
+"@sq\u0000~\u0000:t\u0000\bexchRateq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003f:fppsq\u0000~\u0000\u0015\u0003f:[q\u0000~\u0000\u001ap\u0000sq\u0000"
+"~\u0000\u0000\u0003f:Pppq\u0000~\u0000vsq\u0000~\u0000\u0013\u0001\u00a154ppsq\u0000~\u00001\u0001\u00a15)q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000"
+"~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\trecAmountq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0004\u00a6\u00ae\u0005ppsq\u0000~\u0000\u0015\u0004\u00a6\u00ad\u00faq\u0000"
+"~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0004\u00a6\u00ad\u00efppq\u0000~\u0000vsq\u0000~\u0000\u0013\u0002\u00e1\u00a8\u00d3ppsq\u0000~\u00001\u0002\u00e1\u00a8\u00c8q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000"
+":q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\trodAmountq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003\u008d\u00e7\u00f1ppsq\u0000~"
+"\u0000\u0015\u0003\u008d\u00e7\u00e6q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0003\u008d\u00e7\u00dbppq\u0000~\u0000vsq\u0000~\u0000\u0013\u0001\u00c8\u00e2\u00bfppsq\u0000~\u00001\u0001\u00c8\u00e2\u00b4q\u0000~\u0000\u001apq\u0000"
+"~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000eanchargeAmountq\u0000~\u0000Dq\u0000~\u0000@sq\u0000"
+"~\u0000\u0013\u0003\u0001U\u00f2ppsq\u0000~\u0000\u0015\u0003\u0001U\u00e7q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0003\u0001U\u00dcppq\u0000~\u0000vsq\u0000~\u0000\u0013\u0001<P\u00c0ppsq\u0000~\u0000"
+"1\u0001<P\u00b5q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\nrecPrepAmtq\u0000~\u0000"
+"Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0003b\u008aLppsq\u0000~\u0000\u0015\u0003b\u008aAq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000\u0003b\u008a6ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0001\u00a4"
+"\u00c0Ippsq\u0000~\u00001\u0001\u00a4\u00c0>q\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\trecei"
+"ptNoq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013\u0005_\u00a0}ppsq\u0000~\u0000\u0013\u0005_\u00a0rq\u0000~\u0000\u001apsq\u0000~\u0000\u0015\u0001\u00c5F\u008dq\u0000~\u0000\u001ap\u0000s"
+"q\u0000~\u0000\u0013\u0001\u00c5F\u0082ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00c5"
+"Fwq\u0000~\u0000\u001apsq\u0000~\u00001\u0001\u00c5Ftq\u0000~\u0000\u001apsr\u00002com.sun.msv.grammar.Expression$A"
+"nyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000Apsr\u0000 com.sun.msv"
+".grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;q\u0000~\u0000@sq\u0000~\u0000:t\u0000<com.fede"
+"x.lacitd.cashcontrol.interfaces.clearance.Surchargest\u0000+http:"
+"//java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0015\u0003\u009aY\u00e3q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000"
+"\u0000\u0003\u009aY\u00d8ppsq\u0000~\u0000\u0015\u0001\u00c5F\u008dpp\u0000sq\u0000~\u0000\u0013\u0001\u00c5F\u0082ppsq\u0000~\u0000\u00ac\u0001\u00c5Fwq\u0000~\u0000\u001apsq\u0000~\u00001\u0001\u00c5Ftq\u0000"
+"~\u0000\u001apq\u0000~\u0000\u00b1q\u0000~\u0000\u00b3q\u0000~\u0000@sq\u0000~\u0000:t\u0000@com.fedex.lacitd.cashcontrol.int"
+"erfaces.clearance.SurchargesTypeq\u0000~\u0000\u00b6sq\u0000~\u0000\u0013\u0001\u00d5\u0013Fppsq\u0000~\u00001\u0001\u00d5\u0013;q"
+"\u0000~\u0000\u001apq\u0000~\u00003sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\nsurchargesq\u0000~\u0000Dq\u0000~\u0000@"
+"sq\u0000~\u0000\u0013\u0002\u00b8\u0000\u00f4ppsq\u0000~\u00001\u0002\u00b8\u0000\u00e9q\u0000~\u0000\u001apsq\u0000~\u0000\u001c\u0001~\u00ca\u0007ppsr\u0000 com.sun.msv.data"
+"type.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0003intq\u0000~\u00008sr\u0000*com.sun.msv."
+"datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.dat"
+"atype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Ob"
+"ject;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"eq\u0000~\u0000\u00c9L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTy"
+"pe;L\u0000\tfacetNameq\u0000~\u0000$xq\u0000~\u0000#ppq\u0000~\u00008\u0000\u0001sr\u0000*com.sun.msv.datatype."
+"xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00cdppq\u0000~\u00008\u0000\u0000sr\u0000!com.sun.m"
+"sv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00c8q\u0000~\u0000\'t\u0000\u0004longq\u0000~\u00008sq"
+"\u0000~\u0000\u00ccppq\u0000~\u00008\u0000\u0001sq\u0000~\u0000\u00d3ppq\u0000~\u00008\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Int"
+"egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00c8q\u0000~\u0000\'t\u0000\u0007integerq\u0000~\u00008sr\u0000,com.sun.msv"
+".datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com."
+"sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001a"
+"zb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u00d0ppq\u0000~\u00008\u0001\u0000q\u0000~\u0000xq\u0000~\u0000xt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00dbt\u0000\f"
+"minInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.la"
+"ng.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00dbt\u0000\fmaxInclusivesq\u0000~\u0000\u00e2\u007f\u00ff\u00ff\u00ff"
+"\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u00d6q\u0000~\u0000\u00e1sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00e3"
+"\u0080\u0000\u0000\u0000q\u0000~\u0000\u00d6q\u0000~\u0000\u00e5sq\u0000~\u0000\u00e7\u007f\u00ff\u00ff\u00ffq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\u00cbq\u0000~\u0000\'sq\u0000~\u0000:t\u0000\u0003numq\u0000~"
+"\u0000Dq\u0000~\u0000@sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\be"
+"xpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xps"
+"r\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I"
+"\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00ee[\u0000\u0005tablet\u0000![Lcom/sun/msv/gr"
+"ammar/Expression;xp\u0000\u0000\u0000:\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expres"
+"sion;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fq\u0000~\u0000mppppq\u0000~\u0000\bpppppq\u0000~\u0000{q\u0000~\u0000\u0092ppppq\u0000~\u0000E"
+"q\u0000~\u0000\u000fpppq\u0000~\u0000kq\u0000~\u0000Hpppq\u0000~\u0000npppppq\u0000~\u0000\u0090pppppppppppppppppppppppp"
+"pppq\u0000~\u0000\u000epppppppppppppppppppppppq\u0000~\u0000Opppppppppppppppppppq\u0000~\u0000\u001b"
+"pq\u0000~\u0000Mppppq\u0000~\u0000\tq\u0000~\u0000Pppq\u0000~\u0000upppq\u0000~\u0000\u000bppppppq\u0000~\u0000\u0014ppq\u0000~\u0000\fq\u0000~\u0000\u0010q\u0000"
+"~\u00000pppppq\u0000~\u0000sppppppq\u0000~\u0000\u0083pppppq\u0000~\u0000^pppppppppppppq\u0000~\u0000\u0012pppppppq"
+"\u0000~\u0000\u009bq\u0000~\u0000\nppq\u0000~\u0000Wpppppppppppppppq\u0000~\u0000\u0005pppppq\u0000~\u0000Uppppppq\u0000~\u0000\u00bfppp"
+"pppppppq\u0000~\u0000\u00b8ppq\u0000~\u0000\rppppq\u0000~\u0000\u008bppq\u0000~\u0000eppppq\u0000~\u0000\u00a2ppq\u0000~\u0000\u00a9ppppppppp"
+"pq\u0000~\u0000\u00a8ppq\u0000~\u0000\u0082q\u0000~\u0000cpppq\u0000~\u0000\u00a0q\u0000~\u0000fpppq\u0000~\u0000\u00a3pppppppppppq\u0000~\u0000\u0080q\u0000~\u0000\u0007"
+"ppppq\u0000~\u0000\u009appppppppppq\u0000~\u0000\u0093pppq\u0000~\u0000\u0011ppppq\u0000~\u0000\u00c4pq\u0000~\u0000\u0098ppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000\u008apppppppppppppppppppppq\u0000~\u0000\u0088ppppppppppppp"
+"pq\u0000~\u0000\u00aeq\u0000~\u0000\u00bbpppppppppq\u0000~\u0000Gq\u0000~\u0000\u00baq\u0000~\u0000\u00abpp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------------");
        }

        protected Unmarshaller(com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.ReceivableTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        if (("surcharge" == ___local)&&("" == ___uri)) {
                            _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("surcharge" == ___local)&&("" == ___uri)) {
                            _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        if (("surcharges" == ___local)&&("" == ___uri)) {
                            _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesImpl) spawnChildFromEnterElement((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("surcharges" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("receiptNo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 20;
                            return ;
                        }
                        if (("recPrepAmt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("anchargeAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 6;
                            return ;
                        }
                        if (("rodAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 24;
                            return ;
                        }
                        if (("recAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 26;
                            return ;
                        }
                        if (("exchRate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 18;
                            return ;
                        }
                        if (("recCurrency" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 12;
                            return ;
                        }
                        if (("recNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 8;
                            return ;
                        }
                        if (("recDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        if (("customer" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        if (("mtn" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        if (("location" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 14;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Num = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Num = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("recAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("recNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  19 :
                        if (("exchRate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("surcharges" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  16 :
                        _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromLeaveElement((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        if (("receiptNo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  13 :
                        if (("recCurrency" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("location" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  25 :
                        if (("rodAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("recPrepAmt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("mtn" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("anchargeAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("customer" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("recDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromEnterAttribute((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromLeaveAttribute((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("num" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  26 :
                            eatText2(value);
                            state = 27;
                            return ;
                        case  10 :
                            eatText3(value);
                            state = 11;
                            return ;
                        case  8 :
                            eatText4(value);
                            state = 9;
                            return ;
                        case  28 :
                            eatText5(value);
                            state = 29;
                            return ;
                        case  16 :
                            _Surcharges = ((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl) spawnChildFromText((com.fedex.lacitd.cashcontrol.interfaces.clearance.impl.SurchargesTypeImpl.class), 17, value));
                            return ;
                        case  6 :
                            eatText6(value);
                            state = 7;
                            return ;
                        case  18 :
                            eatText7(value);
                            state = 19;
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            eatText8(value);
                            state = 13;
                            return ;
                        case  20 :
                            eatText9(value);
                            state = 21;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  4 :
                            eatText10(value);
                            state = 5;
                            return ;
                        case  14 :
                            eatText11(value);
                            state = 15;
                            return ;
                        case  24 :
                            eatText12(value);
                            state = 25;
                            return ;
                        case  22 :
                            eatText13(value);
                            state = 23;
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Mtn = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Customer = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AnchargeAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExchRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecCurrency = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReceiptNo = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecPrepAmt = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Location = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RodAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RecDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
